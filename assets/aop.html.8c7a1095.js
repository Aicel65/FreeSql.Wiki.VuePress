import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o,c,a as n,b as l,w as i,d as s,e as a}from"./app.4c20343e.js";const u={},r=s(`<h1 id="aop\u2728" tabindex="-1"><a class="header-anchor" href="#aop\u2728" aria-hidden="true">#</a> AOP\u2728</h1><p>FreeSql AOP \u5DF2\u6709\u7684\u529F\u80FD\u4ECB\u7ECD\uFF0C\u672A\u6765\u4E3A\u4F1A\u6839\u636E\u7528\u6237\u9700\u6C42\u4E0D\u65AD\u589E\u5F3A\u3002</p><h2 id="\u5BA1\u8BA1-crud-\u5982\u4F55\u76D1\u89C6-sql" tabindex="-1"><a class="header-anchor" href="#\u5BA1\u8BA1-crud-\u5982\u4F55\u76D1\u89C6-sql" aria-hidden="true">#</a> \u5BA1\u8BA1 CRUD(\u5982\u4F55\u76D1\u89C6 SQL\uFF1F)</h2><p>\u5982\u679C\u56E0\u4E3A\u67D0\u4E2A sql \u9A9A\u64CD\u4F5C\u8017\u65F6\u5F88\u9AD8\uFF0C\u6CA1\u6709\u4E00\u4E2A\u76F8\u5173\u7684\u5BA1\u8BA1\u529F\u80FD\uFF0C\u6392\u67E5\u8D77\u6765\u53EF\u4EE5\u8BF4\u65E0\u4ECE\u4E0B\u624B\u3002</p><p>FreeSql \u652F\u6301\u7B80\u5355\u7684\u7C7B\u4F3C\u529F\u80FD\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>CurdAfter <span class="token operator">+=</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;ManagedThreadId:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Thread<span class="token punctuation">.</span>CurrentThread<span class="token punctuation">.</span>ManagedThreadId</span><span class="token punctuation">}</span></span><span class="token string">;&quot;</span></span><span class="token operator">+</span>
    <span class="token interpolation-string"><span class="token string">$&quot; FullName:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">e<span class="token punctuation">.</span>EntityType<span class="token punctuation">.</span>FullName</span><span class="token punctuation">}</span></span><span class="token string"> ElapsedMilliseconds:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">e<span class="token punctuation">.</span>ElapsedMilliseconds</span><span class="token punctuation">}</span></span><span class="token string">ms, </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">e<span class="token punctuation">.</span>Sql</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>ElapsedMilliseconds <span class="token operator">&gt;</span> <span class="token number">200</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//\u8BB0\u5F55\u65E5\u5FD7</span>
        <span class="token comment">//\u53D1\u9001\u77ED\u4FE1\u7ED9\u8D1F\u8D23\u4EBA</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u9700\u8981\u4E00\u4E2A\u4E8B\u4EF6\uFF0C\u5C31\u53EF\u4EE5\u5BF9\u5168\u5C40\u8D77\u5230\u4F5C\u7528\u3002</p><p>\u8FD8\u6709\u4E00\u4E2A CurdBefore \u5728\u6267\u884C sql \u4E4B\u524D\u89E6\u53D1\uFF0C\u5E38\u7528\u4E8E\u8BB0\u5F55\u65E5\u5FD7\u6216\u5F00\u53D1\u8C03\u8BD5\u3002</p><h2 id="\u5BA1\u8BA1\u5C5E\u6027\u503C" tabindex="-1"><a class="header-anchor" href="#\u5BA1\u8BA1\u5C5E\u6027\u503C" aria-hidden="true">#</a> \u5BA1\u8BA1\u5C5E\u6027\u503C</h2><p>\u5B9E\u73B0\u63D2\u5165/\u66F4\u65B0\u65F6\u7EDF\u4E00\u5904\u7406\u67D0\u4E9B\u503C\uFF0C\u6BD4\u5982\u67D0\u5C5E\u6027\u7684\u96EA\u82B1\u7B97\u6CD5\u503C\u3001\u521B\u5EFA\u65F6\u95F4\u503C\u3001\u751A\u81F3\u662F\u4E1A\u52A1\u503C\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>AuditValue <span class="token operator">+=</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Column<span class="token punctuation">.</span>CsType <span class="token operator">==</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">long</span></span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        e<span class="token punctuation">.</span>Property<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetCustomAttribute</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>SnowflakeAttribute<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
        e<span class="token punctuation">.</span>Value<span class="token punctuation">?.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span>
        e<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Snowflake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Order</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Snowflake</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u5C5E\u6027\u7684\u7C7B\u578B\u662F long\uFF0C\u5E76\u4E14\u6807\u8BB0\u4E86 [Snowflake]\uFF0C\u5E76\u4E14\u5F53\u524D\u503C\u662F 0\uFF0C\u90A3\u4E48\u5728\u63D2\u5165/\u66F4\u65B0\u65F6\u5B83\u7684\u503C\u5C06\u8BBE\u7F6E\u4E3A\u96EA\u82B1 id \u503C\u3002</p><blockquote><p>\u8BF4\u660E\uFF1ASnowflakeAttribute \u662F\u4F7F\u7528\u8005\u60A8\u6765\u5B9A\u4E49\uFF0Cnew Snowflake().GetId() \u4E5F\u662F\u7531\u4F7F\u7528\u8005\u60A8\u6765\u5B9E\u73B0</p></blockquote><p>\u5982\u679C\u547D\u540D\u89C4\u8303\uFF0C\u53EF\u4EE5\u5728 aop \u91CC\u5224\u65AD\uFF0C<code>if (e.Property.Name == &quot;createtime&quot;) e.Value = DateTime.Now;</code></p><blockquote><p>v3.2.666 \u53EF\u8BBE\u7F6E e.ObjectAuditBreak = true \u4E2D\u65AD\u5BF9\u8C61\u5BA1\u8BA1\uFF0C\u53D8\u76F8\u5B9E\u73B0\u6BCF\u4E2A\u5BF9\u8C61\u53EA\u89E6\u53D1\u4E00\u6B21 AuditValue \u4E8B\u4EF6</p></blockquote><h2 id="\u5BA1\u8BA1\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#\u5BA1\u8BA1\u547D\u4EE4" aria-hidden="true">#</a> \u5BA1\u8BA1\u547D\u4EE4</h2><p>fsql.Aop.CommandBefore\u3001fsql.Aop.CommandAfterHandler \u8FD9\u4E24\u4E2A\u4E8B\u4EF6\u89E6\u53D1\u6240\u6709 SQL \u547D\u4EE4\u7684\u6267\u884C\u524D\u3001\u548C\u6267\u884C\u540E\u3002</p><p>\u6267\u884C\u540E\u7684\u4E8B\u4EF6\u4F1A\u9644\u5E26\u5F02\u5E38\u4FE1\u606F\u3001\u8017\u65F6\u4FE1\u606F\u7B49\u3002</p><p>\u5EFA\u8BAE\u5728\u5F00\u53D1\u6A21\u5F0F\u4E0B\u5F00\u542F\u65E0\u53C2\u6570\u5316\u6A21\u5F0F\uFF0Cnew FreeSqlBuilder().UseNoneCommandParameter(true)\u3002</p><blockquote><p>\u63D0\u793A\uFF1Anew FreeSqlBuilder().UseMonitorCommand \u4E5F\u53EF\u4EE5\u5BA1\u8BA1\u547D\u4EE4\u6267\u884C\u524D\u540E\u3002</p></blockquote><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql1<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>CommandAfter <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">EventHandler<span class="token punctuation">&lt;</span>CommandAfterEventArgs<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Exception <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
     <span class="token comment">//\u505A\u4E00\u4E9B\u65E5\u5FD7\u8BB0\u5F55\u7684\u64CD\u4F5C\u3002\u4EE5\u4E0B\u4E3A\u793A\u4F8B\u3002</span>
     Trace<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Message:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">e<span class="token punctuation">.</span>Exception<span class="token punctuation">.</span>Message </span><span class="token punctuation">}</span></span><span class="token string">\\r\\nStackTrace:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">e<span class="token punctuation">.</span>Exception<span class="token punctuation">.</span>StackTrace</span><span class="token punctuation">}</span></span><span class="token string">\\r\\nCommandText:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">e<span class="token punctuation">.</span>Command<span class="token punctuation">.</span>CommandText</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5BA1\u8BA1\u8FC1\u79FB\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#\u5BA1\u8BA1\u8FC1\u79FB\u811A\u672C" aria-hidden="true">#</a> \u5BA1\u8BA1\u8FC1\u79FB\u811A\u672C</h2><p>FreeSql \u81EA\u5E26\u8FC1\u79FB\u529F\u80FD\uFF0C\u90A3\u4E48\u8FC1\u79FB\u7684 SQL \u8BED\u53E5\u957F\u5565\u6837\uFF0C\u4F60\u53EF\u80FD\u4F1A\u597D\u5947\u3002</p><ul><li><p>\u6BD4\u5982\u521B\u5EFA\u8868\u65F6\uFF1B</p></li><li><p>\u6BD4\u5982\u6DFB\u52A0\u5B57\u6BB5\u65F6\uFF1B</p></li><li><p>\u6BD4\u5982\u4FEE\u6539\u8868\u540D\u3001\u4FEE\u6539\u5B57\u6BB5\u540D\u65F6\uFF1B</p></li><li><p>\u53C8\u6BD4\u5982\u5B57\u6BB5\u7C7B\u578B\u66F4\u6539\u4E4B\u540E\u65F6\uFF1B</p></li></ul><p>\u8FD9\u4E9B\u64CD\u4F5C\u5728 FreeSql.CodeFirst \u5B9E\u73B0\u4E0B\u57FA\u672C\u4E0D\u9700\u8981\u7406\u4F1A\uFF0C\u800C\u4E14\u6211\u4EEC\u53EA\u63A8\u8350\u5728\u5F00\u53D1\u73AF\u5883\u4F7F\u7528\u81EA\u52A8\u8FC1\u79FB\u7684\u529F\u80FD\uFF0C\u6B63\u5F0F\u73AF\u5883\u53EF\u4F7F\u7528\u5176\u4ED6\u5DE5\u5177\u66FF\u4EE3\u6B64\u64CD\u4F5C\u3002</p><p>\u4F46\u6211\u4EEC\u4ECD\u7136\u53EF\u80FD\u9700\u8981\u5BF9\u9879\u76EE\u505A\u5B8C\u6574\u7684\u65E5\u5FD7\u8BB0\u5F55\u3002</p><p>fsql.Aop.SyncStructureBefore\u3001fsql.Aop.SyncStructureAfter \u8FD9\u4E24\u4E2A\u4E8B\u4EF6\u5C06\u6392\u4E0A\u7528\u573A\u3002</p><h2 id="configentityproperty" tabindex="-1"><a class="header-anchor" href="#configentityproperty" aria-hidden="true">#</a> ConfigEntityProperty</h2><h3 id="mysql-enum-\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#mysql-enum-\u6620\u5C04" aria-hidden="true">#</a> MySql Enum \u6620\u5C04</h3><p>\u9ED8\u8BA4\u60C5\u51B5 c# \u679A\u4E3E\u4F1A\u6620\u5C04\u4E3A MySql Enum \u7C7B\u578B\uFF0C\u5982\u679C\u60F3\u6620\u5C04\u4E3A int \u5728 FreeSqlBuilder Build \u4E4B\u540E\u6267\u884C\u4EE5\u4E0B Aop \u7EDF\u4E00\u5904\u7406\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>ConfigEntityProperty <span class="token operator">+=</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Property<span class="token punctuation">.</span>PropertyType<span class="token punctuation">.</span>IsEnum<span class="token punctuation">)</span>
    e<span class="token punctuation">.</span>ModifyResult<span class="token punctuation">.</span>MapType <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">int</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4FEE\u6539-decimal-\u9ED8\u8BA4\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u6539-decimal-\u9ED8\u8BA4\u7279\u6027" aria-hidden="true">#</a> \u4FEE\u6539 decimal \u9ED8\u8BA4\u7279\u6027</h3><p>\u56E0\u4E3A\u9ED8\u8BA4 decimal \u53EA\u652F\u6301 decimal(10,2)\uFF0C\u8303\u56F4\u592A\u5C0F\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5168\u5C40\u4FEE\u6539 decimal \u7C7B\u578B\u7684\u652F\u6301\u8303\u56F4\uFF0C\u6BD4\u5982\u652F\u6301 decimal(18,6)</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql1<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>ConfigEntityProperty <span class="token operator">+=</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Property<span class="token punctuation">.</span>PropertyType <span class="token operator">==</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">decimal</span></span><span class="token punctuation">)</span><span class="token operator">||</span> e<span class="token punctuation">.</span>Property<span class="token punctuation">.</span>PropertyType <span class="token operator">==</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">decimal</span><span class="token punctuation">?</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
       e<span class="token punctuation">.</span>ModifyResult<span class="token punctuation">.</span>Precision <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
       e<span class="token punctuation">.</span>ModifyResult<span class="token punctuation">.</span>Scale <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u81EA\u5B9A\u4E49\u5B9E\u4F53\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u5B9E\u4F53\u7279\u6027" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u5B9E\u4F53\u7279\u6027</h3><p>\u6BD4\u5982\u9879\u76EE\u5185\u5DF2\u7ECF\u4F7F\u7528\u4E86\u5176\u5B83 orm\uFF0C\u5982 efcore\uFF0C\u8FD9\u6837\u610F\u5473\u7740\u5B9E\u4F53\u4E2D\u53EF\u80FD\u5B58\u5728 [Key]\uFF0C\u4F46\u5B83\u4E0E FreeSql [Column(IsPrimary = true] \u4E0D\u540C\u3002</p><p>Q\uFF1A FreeSql \u5B9E\u4F53\u7279\u6027\u4E3A\u5565\u8FD9\u4E48\u522B\u626D\uFF1F</p><p>A\uFF1A \u4E3A\u4E86\u8003\u8651\u4E00\u81F4\u6027\u7528\u6CD5\uFF0C\u5168\u90E8\u5C01\u88C5\u5728 ColumnAttribute \u4E0B\uFF0C\u8FD9\u6837\u7528\u6237\u4F7F\u7528\u8D77\u6765\uFF0C\u4E0D\u7528\u5230\u5904 using \u6216\u8005 \u56DE\u5FC6\u7279\u6027\u5E94\u8BE5\u7528\u54EA\u4E2A\u540D\u5B57\uFF0C\u5982\u81EA\u589E [Column(IsIdentity = true)] \u5373\u53EF\u3002</p><p>FreeSql \u63D0\u4F9B AOP \u81EA\u5B9A\u4E49\u7279\u6027\u529F\u80FD\uFF0C\u5B9E\u73B0\u4E0E\u591A\u4E2A orm \u5171\u540C\u62E5\u6709\u4E00\u5957\u5B9E\u4F53\u7279\u6027\uFF0C\u53EF\u907F\u514D\u91CD\u590D\u5B9A\u4E49\u7279\u6027\u3002</p><blockquote><p>v1.4.0+ \u5DF2\u81EA\u52A8\u8BC6\u522B EFCore \u5B9E\u4F53\u7279\u6027 Key/Required/NotMapped/MaxLength/StringLength/DatabaseGenerated/Table/Column</p></blockquote><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>ConfigEntity <span class="token operator">+=</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> attr <span class="token operator">=</span> e<span class="token punctuation">.</span>EntityType<span class="token punctuation">.</span><span class="token function">GetCustomAttributes</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">MyTableAttribute</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">MyTableAttribute</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>attr <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        e<span class="token punctuation">.</span>ModifyResult<span class="token punctuation">.</span>Name <span class="token operator">=</span> attr<span class="token punctuation">.</span>Name<span class="token punctuation">;</span> <span class="token comment">//\u8868\u540D</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
fsql<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>ConfigEntityProperty <span class="token operator">+=</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> attr <span class="token operator">=</span> e<span class="token punctuation">.</span>Property<span class="token punctuation">.</span><span class="token function">GetCustomAttributes</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">MyColumnAttribute</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">MyColumnAttribute</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>attr <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        e<span class="token punctuation">.</span>ModifyResult<span class="token punctuation">.</span>Name <span class="token operator">=</span> attr<span class="token punctuation">.</span>Name<span class="token punctuation">;</span> <span class="token comment">//\u5B57\u6BB5\u540D</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MyTable</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">class</span> <span class="token class-name">YourEntity</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MyColumn</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> pkid <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">MyTableAttribute</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Attribute</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">MyTableAttribute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">MyColumnAttribute</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Attribute</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">MyColumnAttribute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ado-net-\u8BFB\u53D6\u62E6\u622A" tabindex="-1"><a class="header-anchor" href="#ado-net-\u8BFB\u53D6\u62E6\u622A" aria-hidden="true">#</a> Ado .net \u8BFB\u53D6\u62E6\u622A</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>AuditDataReader <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>DataReader<span class="token punctuation">.</span><span class="token function">GetFieldType</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>Index<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">string</span></span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      e<span class="token punctuation">.</span>Value <span class="token operator">==</span> DBNull<span class="token punctuation">.</span>Value<span class="token punctuation">)</span>
        e<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8868\u8FBE\u5F0F\u62E6\u622A" tabindex="-1"><a class="header-anchor" href="#\u8868\u8FBE\u5F0F\u62E6\u622A" aria-hidden="true">#</a> \u8868\u8FBE\u5F0F\u62E6\u622A</h2><p>FreeSql \u5185\u90E8\u8868\u8FBE\u5F0F\u652F\u6301\u975E\u5E38\u4E30\u5BCC\uFF0C\u5BF9\u5404\u5927\u6570\u636E\u5E93\u7684\u517C\u5BB9\u5EA6\u4E5F\u505A\u5F97\u5F88\u597D\u3002</p>`,45),k=a("\u6709\u5173\u8868\u8FBE\u5F0F\u652F\u6301\u7684\u7A0B\u5EA6\uFF0C\u53EF\u53C2\u9605\uFF1A"),d=a("\u8868\u8FBE\u5F0F\u51FD\u6570"),m=s(`<p>\u5373\u4FBF\u5982\u6B64\u4E30\u5BCC\uFF0C\u4E5F\u4ECD\u7136\u65E0\u6CD5\u6EE1\u8DB3\u7528\u6237\u9700\u6C42\uFF0CFreeSql \u5BF9\u5916\u5F00\u653E\u4E86\u81EA\u5B9A\u4E49\u8868\u8FBE\u5F0F\u89E3\u6790\u63A5\u53E3\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>ParseExpression <span class="token operator">+=</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Expression<span class="token punctuation">.</span>NodeType <span class="token operator">==</span> Call <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>Expression<span class="token punctuation">.</span>Name <span class="token operator">==</span> <span class="token string">&quot;get_Item&quot;</span><span class="token punctuation">)</span>
        e<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token string">&quot;1111&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u89E3\u6790\u6709\u70B9\u590D\u6742\uFF0C\u5F53 <code>e.Expression</code> \u5F88\u590D\u6742\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u8FD8\u63D0\u4F9B\u4E86 <code>e.FreeParse</code> \u65B9\u6CD5\uFF0C\u4F7F\u7528\u5B83\u76F8\u5F53\u4E8E\u8C03\u7528 <code>FreeSql</code> \u5185\u7F6E\u8868\u8FBE\u5F0F\u89E3\u6790\u5F15\u64CE\uFF0C\u8F85\u52A9\u60A8\u8FDB\u884C\u89E3\u6790\u3002</p>`,3);function v(b,y){const p=e("RouterLink");return o(),c("div",null,[r,n("blockquote",null,[n("p",null,[k,l(p,{to:"/guide/expression-function.html"},{default:i(()=>[d]),_:1})])]),m])}var f=t(u,[["render",v],["__file","aop.html.vue"]]);export{f as default};

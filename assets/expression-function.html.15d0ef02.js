import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,c,a,b as s,F as d,e as n,d as p,o as l}from"./app.04784437.js";const r={},u=a("h1",{id:"\u8868\u8FBE\u5F0F\u51FD\u6570",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#\u8868\u8FBE\u5F0F\u51FD\u6570","aria-hidden":"true"},"#"),n(" \u8868\u8FBE\u5F0F\u51FD\u6570")],-1),i=a("p",null,[n("\u8FD9\u662F "),a("code",null,"FreeSql"),n(" \u975E\u5E38\u7279\u8272\u7684\u529F\u80FD\u4E4B\u4E00\uFF0C\u6DF1\u5165\u7EC6\u5316\u51FD\u6570\u89E3\u6790\uFF0C\u6240\u652F\u6301\u7684\u7C7B\u578B\u57FA\u672C\u90FD\u53EF\u4EE5\u4F7F\u7528\u5BF9\u5E94\u7684\u8868\u8FBE\u5F0F\u51FD\u6570\uFF0C\u4F8B\u5982 \u65E5\u671F\u3001\u5B57\u7B26\u4E32\u3001"),a("code",null,"IN"),n("\u67E5\u8BE2\u3001\u6570\u7EC4\uFF08"),a("code",null,"PostgreSQL"),n("\u7684\u6570\u7EC4\uFF09\u3001\u5B57\u5178\uFF08PostgreSQL HStore)\u7B49\u7B49\u3002")],-1),k=a("h2",{id:"\u52A8\u6001lambda\u8868\u8FBE\u5F0F",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#\u52A8\u6001lambda\u8868\u8FBE\u5F0F","aria-hidden":"true"},"#"),n(" \u52A8\u6001Lambda\u8868\u8FBE\u5F0F")],-1),b=a("code",null,"And",-1),m=n("\u3001"),h=a("code",null,"Or",-1),g=n("\u6269\u5C55\u65B9\u6CD5 "),f={href:"https://github.com/dotnetcore/FreeSql/blob/master/FreeSql/Extensions/LambadaExpressionExtensions.cs",target:"_blank",rel:"noopener noreferrer"},y=n("LambadaExpressionExtensions.cs"),T=p(`<p>\u793A\u4F8B</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name">Expression<span class="token punctuation">&lt;</span>Func<span class="token punctuation">&lt;</span>T<span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">where</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">where</span> <span class="token operator">=</span> <span class="token keyword">where</span><span class="token punctuation">.</span><span class="token function">And</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>num <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">where</span> <span class="token operator">=</span> <span class="token keyword">where</span><span class="token punctuation">.</span><span class="token function">Or</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>num <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u52A8\u6001\u62FC\u63A5<code>Or</code>,\u901A\u8FC7<code>Or</code>\u6269\u5C55\u65B9\u6CD5\u52A8\u6001\u62FC\u63A5<code>Lambda</code>\u8868\u8FBE\u5F0F</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name">Expression<span class="token punctuation">&lt;</span>Func<span class="token punctuation">&lt;</span>T<span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">where</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>xxx<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
   <span class="token keyword">where</span> <span class="token operator">=</span> <span class="token keyword">where</span><span class="token punctuation">.</span><span class="token function">Or</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>num <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="in\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#in\u67E5\u8BE2" aria-hidden="true">#</a> In\u67E5\u8BE2</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> t1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT .. FROM ..</span>
<span class="token comment">//WHERE (a.\`Id\` in (1,2,3))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>\u5DF2\u4F18\u5316\uFF0C\u9632\u6B62 where in \u5143\u7D20\u591A\u8FC7\u7684 SQL \u9519\u8BEF\uFF0C\u5982\uFF1A</p></blockquote><blockquote><p>[Err] ORA-01795: maximum number of expressions in a list a 1000</p></blockquote><p>\u539F\u6765\uFF1Awhere id in (1..1333)</p><p>\u73B0\u5728\uFF1Awhere id in (1..500) or id in (501..1000) or id in (1001..1333)</p><h2 id="in\u591A\u5217\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#in\u591A\u5217\u67E5\u8BE2" aria-hidden="true">#</a> In\u591A\u5217\u67E5\u8BE2</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">//\u5143\u7EC4\u96C6\u5408</span>
<span class="token class-name">vae</span> lst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token punctuation">(</span>Guid<span class="token punctuation">,</span> DateTime<span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lst<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lst<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> t2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> lst<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>ct1<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT .. FROM ..</span>
<span class="token comment">//WHERE (a.&quot;Id&quot; = &#39;685ee1f6-bdf6-4719-a291-c709b8a1378f&#39; AND a.&quot;ct1&quot; = &#39;2019-12-07 23:55:27&#39; OR </span>
<span class="token comment">//a.&quot;Id&quot; = &#39;5ecd838a-06a0-4c81-be43-1e77633b7404&#39; AND a.&quot;ct1&quot; = &#39;2019-12-07 23:55:27&#39;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>v3.2.650 \u4F7F\u7528 .Where(a =&gt; list.Any(b =&gt; b.Item1 == a.Id &amp;&amp; b.Item2 == a.ct1))</p></blockquote>`,13),S=n("\u5B9E\u73B0\u4EE3\u7801\uFF1A"),v={href:"https://github.com/dotnetcore/FreeSql/issues/243",target:"_blank",rel:"noopener noreferrer"},q=n("https://github.com/dotnetcore/FreeSql/issues/243"),x=p('<h2 id="in\u5B50\u8868" tabindex="-1"><a class="header-anchor" href="#in\u5B50\u8868" aria-hidden="true">#</a> In\u5B50\u8868</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">As</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//SELECT a.`Id`, a.`Title`, a.`Clicks`, a.`CreateTime`, a.`CategoryId`</span>\n<span class="token comment">//FROM `Topic` a</span>\n<span class="token comment">//WHERE (((a.`Id`) in (SELECT b.`Id`</span>\n<span class="token comment">//    FROM `Topic` b)))</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="exists\u5B50\u8868" tabindex="-1"><a class="header-anchor" href="#exists\u5B50\u8868" aria-hidden="true">#</a> Exists\u5B50\u8868</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">As</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//SELECT a.`Id`, a.`Title`, a.`Clicks`, a.`CreateTime`, a.`CategoryId`</span>\n<span class="token comment">//FROM `Topic` a</span>\n<span class="token comment">//WHERE (exists(SELECT 1</span>\n<span class="token comment">//    FROM `Topic` b</span>\n<span class="token comment">//    WHERE (b.`Id` = a.`Id`)</span>\n<span class="token comment">//    limit 0,1))</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u67E5\u627E\u4ECA\u5929\u521B\u5EFA\u7684\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u67E5\u627E\u4ECA\u5929\u521B\u5EFA\u7684\u6570\u636E" aria-hidden="true">#</a> \u67E5\u627E\u4ECA\u5929\u521B\u5EFA\u7684\u6570\u636E</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>CreateTime<span class="token punctuation">.</span>Date <span class="token operator">==</span> DateTime<span class="token punctuation">.</span>Today<span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//\u8FD9\u884C\u4EE3\u7801\u8BF4\u660E FreeSql \u8868\u8FBE\u5F0F\u89E3\u6790\u5F3A\u5927\uFF0C\u4E0D\u662F\u6240\u6709 ORM \u90FD\u652F\u6301</span>\n\nfsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>CreateTime<span class="token punctuation">.</span><span class="token function">Between</span><span class="token punctuation">(</span>DateTime<span class="token punctuation">.</span>Today<span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Today<span class="token punctuation">.</span><span class="token function">AddDays</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//\u6B63\u5E38\u7528\u6CD5\u5E94\u8BE5\u662F\u8FD9\u6837</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>SqlServer nvarchar/varchar \u5DF2\u517C\u5BB9\u8868\u8FBE\u5F0F\u89E3\u6790\uFF0C\u5206\u522B\u89E3\u6790\u4E3A\uFF1AN&#39;&#39; \u548C &#39;&#39;\uFF0C\u4F18\u5316\u7D22\u5F15\u6267\u884C\u8BA1\u5212\uFF1B</p></blockquote><h2 id="\u65E5\u671F\u683C\u5F0F\u5316" tabindex="-1"><a class="header-anchor" href="#\u65E5\u671F\u683C\u5F0F\u5316" aria-hidden="true">#</a> \u65E5\u671F\u683C\u5F0F\u5316</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>CreateTime<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// SELECT date_format(a.`CreateTime`, &#39;%H:%i:%s&#39;) as1 </span>\n<span class="token comment">// FROM `xxx` a </span>\n<span class="token comment">// limit 0,1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>v1.5.0 \u652F\u6301\u4E86\u5E38\u7528 c# \u65E5\u671F\u683C\u5F0F\u5316\uFF0Cyyyy MM dd HH mm ss yy M d H hh h m s tt t</p></blockquote><blockquote><p>tt t \u4E3A AM PM</p></blockquote><h2 id="\u5F00\u7A97\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5F00\u7A97\u51FD\u6570" aria-hidden="true">#</a> \u5F00\u7A97\u51FD\u6570</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T1<span class="token punctuation">,</span> T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">.</span><span class="token function">InnerJoin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>\n<span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span>\n<span class="token punctuation">{</span>\n    Id <span class="token operator">=</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>\n    EdiId <span class="token operator">=</span> b<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>\n    over1 <span class="token operator">=</span> SqlExt<span class="token punctuation">.</span><span class="token function">Rank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Over</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderByDescending</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>EdiId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>v1.6.0 \u5229\u7528\u81EA\u5B9A\u4E49\u89E3\u6790\u529F\u80FD\uFF0C\u589E\u52A0 SqlExt.Rank().Over().PartitionBy(...)\u3001MySql group_concat \u5E38\u7528\u51FD\u6570\uFF0C\u6B22\u8FCE PR \u8865\u5145</p></blockquote><h2 id="\u5B50\u8868exists" tabindex="-1"><a class="header-anchor" href="#\u5B50\u8868exists" aria-hidden="true">#</a> \u5B50\u8868Exists</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">As</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//SELECT a.`Id`, a.`Title`, a.`Clicks`, a.`CreateTime`, a.`CategoryId`</span>\n<span class="token comment">//FROM `Topic` a</span>\n<span class="token comment">//WHERE (exists(SELECT 1</span>\n<span class="token comment">//    FROM `Topic` b</span>\n<span class="token comment">//    WHERE (b.`Id` = a.`Id`)</span>\n<span class="token comment">//    limit 0,1))</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>\u63D0\u793A\uFF1A\u7531\u4E8E\u5B50\u67E5\u8BE2\u7684\u5B9E\u4F53\u7C7B\u4E0E\u4E0A\u5C42\u76F8\u540C\uFF0C\u4F7F\u7528 As(&quot;b&quot;) \u6307\u660E\u522B\u540D\uFF0C\u4EE5\u4FBF\u533A\u5206</p></blockquote><h2 id="\u5B50\u8868in" tabindex="-1"><a class="header-anchor" href="#\u5B50\u8868in" aria-hidden="true">#</a> \u5B50\u8868In</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">As</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//SELECT a.`Id`, a.`Title`, a.`Clicks`, a.`CreateTime`, a.`CategoryId`</span>\n<span class="token comment">//FROM `Topic` a</span>\n<span class="token comment">//WHERE (((a.`Id`) in (SELECT b.`Id`</span>\n<span class="token comment">//    FROM `Topic` b)))</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u5B50\u8868join" tabindex="-1"><a class="header-anchor" href="#\u5B50\u8868join" aria-hidden="true">#</a> \u5B50\u8868Join</h2><blockquote><p>v1.8.0+ string.Join + ToList \u5B9E\u73B0\u5C06\u5B50\u67E5\u8BE2\u7684\u591A\u884C\u7ED3\u679C\uFF0C\u62FC\u63A5\u4E3A\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u5982\uFF1A&quot;1,2,3,4&quot;</p></blockquote><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span>\n  id <span class="token operator">=</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>\n  concat <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>StringJoin01<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//SELECT a.`Id`, (SELECT group_concat(b.`Id` separator &#39;,&#39;) </span>\n<span class="token comment">//    FROM `StringJoin01` b) </span>\n<span class="token comment">//FROM `Topic` a</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',22),w=n("\u63D0\u793A\uFF1A\u5B50\u67E5\u8BE2 string.Join + ToList \u9002\u914D\u4E86 sqlserver/pgsql/oracle/mysql/sqlite/firebird/\u8FBE\u68A6/\u91D1\u4ED3/\u5357\u5927/\u7FF0\u9AD8 "),C={href:"https://github.com/dotnetcore/FreeSql/issues/405",target:"_blank",rel:"noopener noreferrer"},_=n("#405"),M=p(`<h2 id="\u5B50\u8868first-count-sum-max-min-avg" tabindex="-1"><a class="header-anchor" href="#\u5B50\u8868first-count-sum-max-min-avg" aria-hidden="true">#</a> \u5B50\u8868First/Count/Sum/Max/Min/Avg</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Category<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span>  <span class="token punctuation">{</span>
  all <span class="token operator">=</span> a<span class="token punctuation">,</span>
  first <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>CategoryId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">,</span>
  count <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>CategoryId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  sum <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>CategoryId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Clicks<span class="token punctuation">)</span><span class="token punctuation">,</span>
  max <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>CategoryId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Max</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Clicks<span class="token punctuation">)</span><span class="token punctuation">,</span>
  min <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>CategoryId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Min</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Clicks<span class="token punctuation">)</span><span class="token punctuation">,</span>
  avg <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>CategoryId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Avg</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Clicks<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u5B50\u8868tolist" tabindex="-1"><a class="header-anchor" href="#\u5B50\u8868tolist" aria-hidden="true">#</a> \u5B50\u8868ToList</h2><blockquote><p>v3.2.650+ \u4EE5\u4E0B\u6700\u591A\u6267\u884C3\u6B21 SQL</p></blockquote><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
<span class="token punctuation">{</span>
  all <span class="token operator">=</span> a<span class="token punctuation">,</span>
  list1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  list2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>TopicId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u81EA\u5B9A\u4E49\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u89E3\u6790" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u89E3\u6790</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ExpressionCall</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DbFunc</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u5FC5\u8981\u5B9A\u4E49 static + ThreadLocal</span>
  <span class="token keyword">static</span> <span class="token class-name">ThreadLocal<span class="token punctuation">&lt;</span>ExpressionCallContext<span class="token punctuation">&gt;</span></span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ThreadLocal<span class="token punctuation">&lt;</span>ExpressionCallContext<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">DateTime</span> <span class="token function">FormatDateTime</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">DateTime</span> that<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> arg1<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> up <span class="token operator">=</span> context<span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>up<span class="token punctuation">.</span>DataType <span class="token operator">==</span> FreeSql<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">)</span> <span class="token comment">//\u91CD\u5199\u5185\u5BB9</span>
      up<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;date_format(</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">up<span class="token punctuation">.</span>ParsedContent<span class="token punctuation">[</span><span class="token string">&quot;that&quot;</span><span class="token punctuation">]</span></span><span class="token punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">up<span class="token punctuation">.</span>ParsedContent<span class="token punctuation">[</span><span class="token string">&quot;arg1&quot;</span><span class="token punctuation">]</span></span><span class="token punctuation">}</span></span><span class="token string">)&quot;</span></span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> that<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name"><span class="token keyword">var</span></span> sql1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>SysModule<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>CreateTime<span class="token punctuation">.</span><span class="token function">FormatDateTime</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT date_format(a.&quot;CreateTime&quot;, &#39;yyyy-MM-dd&#39;) as1 </span>
<span class="token comment">//FROM &quot;SysModule&quot; a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>[ExpressionCall] \u7279\u6027\u53EF\u5728\u9759\u6001\u6269\u5C55\u7C7B\u4E0A\u6807\u8BB0\uFF0C\u4E5F\u53EF\u4EE5\u5728\u5355\u4E2A\u9759\u6001\u65B9\u6CD5\u4E0A\u6807\u8BB0\uFF1B</p><table><thead><tr><th>ExpressionCallContext \u5C5E\u6027</th><th>\u7C7B\u578B</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>DataType</td><td>FreeSql.DataType</td><td>\u7528\u4E8E\u5B9E\u73B0\u4E0D\u540C\u6570\u636E\u5E93\u7684\u9002\u914D\u5224\u65AD\u6761\u4EF6</td></tr><tr><td>ParsedContent</td><td>Dictionary&lt;string, string&gt;</td><td>\u51FD\u6570\u7684\u5404\u53C2\u6570\u89E3\u6790\u7ED3\u679C</td></tr><tr><td>DbParameter</td><td>DbParameter</td><td>that \u88AB\u53C2\u6570\u5316\u7684\u5BF9\u8C61\uFF08\u6709\u53EF\u80FD\u4E3A null)</td></tr><tr><td>UserParameters</td><td>List&lt;DbParameter&gt;</td><td>\u53EF\u9644\u52A0\u53C2\u6570\u5316\u5BF9\u8C61</td></tr><tr><td>Result</td><td>string</td><td>\u8FD4\u56DE\u8868\u8FBE\u5F0F\u51FD\u6570\u8868\u793A\u7684 SQL \u5B57\u7B26\u4E32</td></tr></tbody></table><blockquote><p>\u5F53\u6269\u5C55\u65B9\u6CD5\u8FD4\u56DE\u503C\u4E3A string \u65F6\uFF0C\u5176\u8FD4\u56DE\u503C\u4E5F\u53EF\u4EE5\u5F53\u4F5C context.Value.Result \u529F\u80FD</p></blockquote><blockquote><p>\u5F53\u4E0D\u60F3\u89E3\u6790\u6307\u5B9A\u53C2\u6570\u65F6\uFF0C\u4F7F\u7528\u7279\u6027 [RawValue] \u6807\u8BB0</p></blockquote><h2 id="\u53C2\u6570\u5316" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570\u5316" aria-hidden="true">#</a> \u53C2\u6570\u5316</h2><p>\u5728\u4E4B\u524D Where(lambda) \u89E3\u6790\u51FA\u6765\u7684\u662F\u7EAF\u6587\u672C\uFF0C\u505A\u4E86\u9632\u6B62\u6CE8\u5165\u529F\u80FD\uFF0C\u5BF9\u6570\u636E\u5E93\u6267\u884C\u8BA1\u5212\u8981\u6C42\u9AD8\u7684\uFF0C\u73B0\u5728\u53EF\u4EE5\u5F00\u542F lambda \u53C2\u6570\u5316\u529F\u80FD\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u8BF7\u52A1\u5FC5\u5B9A\u4E49\u6210 Singleton \u5355\u4F8B\u6A21\u5F0F</span>
  <span class="token punctuation">.</span><span class="token function">UseGenerateCommandParameterWithLambda</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token range operator">..</span><span class="token punctuation">.</span>

<span class="token class-name"><span class="token keyword">var</span></span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT .. FROM \`Song\` a WHERE \`Id\` = @exp_0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u751F\u6210\u7684\u53C2\u6570\u5BF9\u8C61\uFF0CDbType\u3001Size\u3001Precision\u3001Scale \u503C\u8BBE\u7F6E\u9ED8\u8BA4\u5DF2\u4F5C\u4F18\u5316\uFF0C\u4E0E\u5B9E\u4F53\u5C5E\u6027\u5B9A\u4E49\u4E00\u81F4\u3002</p><p>\u8BE1\u5F02\u64CD\u4F5C\uFF1A</p><blockquote><p>\u5982\u679C\u4E0D\u5E0C\u671B string \u53C2\u6570\u4E0E\u5B9E\u4F53\u5C5E\u6027\u7684 Size \u76F8\u540C\uFF0C\u53EF\u5229\u7528\u81EA\u5B9A\u4E49\u8868\u8FBE\u5F0F\u51FD\u6570\u529F\u80FD\uFF0C\u5982\u4E0B\uFF1A</p></blockquote><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> name <span class="token operator">=</span> <span class="token string">&quot;testname&quot;</span><span class="token punctuation">;</span>
fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TestMySqlStringIsNullable<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>varchar <span class="token operator">==</span> name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TestMySqlStringIsNullable<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>varchar <span class="token operator">==</span> name<span class="token punctuation">.</span><span class="token function">SetDbParameter</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestMySqlStringIsNullable</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

  <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>DbType <span class="token operator">=</span> <span class="token string">&quot;varchar(100)&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> varchar <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ExpressionCall</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DbFunc</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token class-name">ThreadLocal<span class="token punctuation">&lt;</span>ExpressionCallContext<span class="token punctuation">&gt;</span></span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ThreadLocal<span class="token punctuation">&lt;</span>ExpressionCallContext<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">SetDbParameter</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name"><span class="token keyword">string</span></span> that<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> size<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>Value<span class="token punctuation">.</span>DbParameter <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
      context<span class="token punctuation">.</span>Value<span class="token punctuation">.</span>DbParameter<span class="token punctuation">.</span>Size <span class="token operator">=</span> size<span class="token punctuation">;</span>
    <span class="token keyword">return</span> context<span class="token punctuation">.</span>Value<span class="token punctuation">.</span>ParsedContent<span class="token punctuation">[</span><span class="token string">&quot;that&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u7B2C\u4E00\u6761\u8BED\u53E5\u4EA7\u751F\u7684\u53C2\u6570\u5BF9\u8C61 Size \u4E3A 100\uFF0C\u7B2C\u4E8C\u6761\u4E3A 10\uFF1A</p><p><img src="https://user-images.githubusercontent.com/16286519/69433211-2c5fcf80-0d76-11ea-8eec-963eb37199c5.png" alt="image" loading="lazy"></p><h2 id="\u8868\u8FBE\u5F0F\u51FD\u6570\u5168\u89C8" tabindex="-1"><a class="header-anchor" href="#\u8868\u8FBE\u5F0F\u51FD\u6570\u5168\u89C8" aria-hidden="true">#</a> \u8868\u8FBE\u5F0F\u51FD\u6570\u5168\u89C8</h2><table><thead><tr><th>\u8868\u8FBE\u5F0F</th><th>MySql</th><th>SqlServer</th><th>PostgreSQL</th><th>Oracle</th><th>\u529F\u80FD\u8BF4\u660E</th></tr></thead><tbody><tr><td>a ? b : c</td><td>case when a then b else c end</td><td>case when a then b else c end</td><td>case when a then b else c end</td><td>case when a then b else c end</td><td>a\u6210\u7ACB\u65F6\u53D6b\u503C\uFF0C\u5426\u5219\u53D6c\u503C</td></tr><tr><td>a ?? b</td><td>ifnull(a, b)</td><td>isnull(a, b)</td><td>coalesce(a, b)</td><td>nvl(a, b)</td><td>\u5F53a\u4E3Anull\u65F6\uFF0C\u53D6b\u503C</td></tr><tr><td>\u6570\u5B57 + \u6570\u5B57</td><td>a + b</td><td>a + b</td><td>a + b</td><td>a + b</td><td>\u6570\u5B57\u76F8\u52A0</td></tr><tr><td>\u6570\u5B57 + \u5B57\u7B26\u4E32</td><td>concat(a, b)</td><td>cast(a as varchar) + cast(b as varchar)</td><td>case(a as varchar)|| b</td><td>a|| b</td><td>\u5B57\u7B26\u4E32\u76F8\u52A0\uFF0Ca\u6216b\u4EFB\u610F\u4E00\u4E2A\u4E3A\u5B57\u7B26\u4E32\u65F6</td></tr><tr><td>a - b</td><td>a - b</td><td>a - b</td><td>a - b</td><td>a - b</td><td>\u51CF</td></tr><tr><td>a * b</td><td>a * b</td><td>a * b</td><td>a * b</td><td>a * b</td><td>\u4E58</td></tr><tr><td>a / b</td><td>a / b</td><td>a / b</td><td>a / b</td><td>a / b</td><td>\u9664</td></tr><tr><td>a / b</td><td>a div b</td><td>a / b</td><td>a / b</td><td>trunc(a / b)</td><td>\u6574\u9664(a,b\u90FD\u4E3A\u6574\u6570)</td></tr><tr><td>a % b</td><td>a % b</td><td>a % b</td><td>a % b</td><td>mod(a,b)</td><td>\u6A21</td></tr></tbody></table><blockquote><p>\u7B49\u7B49...</p></blockquote><h3 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h3><table><thead><tr><th>\u8868\u8FBE\u5F0F</th><th>MySql</th><th>SqlServer</th><th>PostgreSQL</th><th>Oracle</th><th>\u529F\u80FD\u8BF4\u660E</th></tr></thead><tbody><tr><td>a.Length</td><td>-</td><td>-</td><td>case when a is null then 0 else array_length(a,1) end</td><td>-</td><td>\u6570\u7EC4\u957F\u5EA6</td></tr><tr><td>\u5E38\u91CF\u6570\u7EC4.Length</td><td>-</td><td>-</td><td>array_length(array[\u5E38\u91CF\u6570\u7EC4\u5143\u7D20\u9017\u53F7\u5206\u5272],1)</td><td>-</td><td>\u6570\u7EC4\u957F\u5EA6</td></tr><tr><td>a.Any()</td><td>-</td><td>-</td><td>case when a is null then 0 else array_length(a,1) end &gt; 0</td><td>-</td><td>\u6570\u7EC4\u662F\u5426\u4E3A\u7A7A</td></tr><tr><td>\u5E38\u91CF\u6570\u7EC4.Contains(b)</td><td>b in (\u5E38\u91CF\u6570\u7EC4\u5143\u7D20\u9017\u53F7\u5206\u5272)</td><td>b in (\u5E38\u91CF\u6570\u7EC4\u5143\u7D20\u9017\u53F7\u5206\u5272)</td><td>b in (\u5E38\u91CF\u6570\u7EC4\u5143\u7D20\u9017\u53F7\u5206\u5272)</td><td>b in (\u5E38\u91CF\u6570\u7EC4\u5143\u7D20\u9017\u53F7\u5206\u5272)</td><td>IN\u67E5\u8BE2</td></tr><tr><td>a.Contains(b)</td><td>-</td><td>-</td><td>a @&gt; array[b]</td><td>-</td><td>a\u6570\u7EC4\u662F\u5426\u5305\u542Bb\u5143\u7D20</td></tr><tr><td>a.Concat(b)</td><td>-</td><td>-</td><td>a || b</td><td>-</td><td>\u6570\u7EC4\u76F8\u8FDE</td></tr><tr><td>a.Count()</td><td>-</td><td>-</td><td>\u540C Length</td><td>-</td><td>\u6570\u7EC4\u957F\u5EA6</td></tr></tbody></table><blockquote><p>\u4E00\u4E2A\u7EC6\u8282\u8BC1\u660E FreeSql \u5320\u5FC3\u5236\u4F5C</p></blockquote><p>\u901A\u7528\u7684 in \u67E5\u8BE2 select.Where(a =&gt; new []{ 1,2,3 }.Contains(a.xxx))</p><p>\u5047\u8BBE xxxs \u662F pgsql \u7684\u6570\u7EC4\u5B57\u6BB5\u7C7B\u578B\uFF0C\u5176\u5B9E\u4F1A\u4E0E\u4E0A\u9762\u7684 in \u67E5\u8BE2\u8D77\u51B2\u7A81\uFF0CFreeSql \u89E3\u51B3\u4E86\u8FD9\u4E2A\u77DB\u76FE select.Where(a =&gt; a.xxxs.Contains(1))</p><h3 id="\u5B57\u5178-dictionary-string-string" tabindex="-1"><a class="header-anchor" href="#\u5B57\u5178-dictionary-string-string" aria-hidden="true">#</a> \u5B57\u5178 Dictionary&lt;string, string&gt;</h3><table><thead><tr><th>\u8868\u8FBE\u5F0F</th><th>MySql</th><th>SqlServer</th><th>PostgreSQL</th><th>Oracle</th><th>\u529F\u80FD\u8BF4\u660E</th></tr></thead><tbody><tr><td>a.Count</td><td>-</td><td>-</td><td>case when a is null then 0 else array_length(akeys(a),1) end</td><td>-</td><td>\u5B57\u5178\u957F\u5EA6</td></tr><tr><td>a.Keys</td><td>-</td><td>-</td><td>akeys(a)</td><td>-</td><td>\u8FD4\u56DE\u5B57\u5178\u6240\u6709key\u6570\u7EC4</td></tr><tr><td>a.Values</td><td>-</td><td>-</td><td>avals(a)</td><td>-</td><td>\u8FD4\u56DE\u5B57\u5178\u6240\u6709value\u6570\u7EC4</td></tr><tr><td>a.Contains(b)</td><td>-</td><td>-</td><td>a @&gt; b</td><td>-</td><td>\u5B57\u5178\u662F\u5426\u5305\u542Bb</td></tr><tr><td>a.ContainsKey(b)</td><td>-</td><td>-</td><td>a? b</td><td>-</td><td>\u5B57\u5178\u662F\u5426\u5305\u542Bkey</td></tr><tr><td>a.Concat(b)</td><td>-</td><td>-</td><td>a || b</td><td>-</td><td>\u5B57\u5178\u76F8\u8FDE</td></tr><tr><td>a.Count()</td><td>-</td><td>-</td><td>\u540C Count</td><td>-</td><td>\u5B57\u5178\u957F\u5EA6</td></tr></tbody></table><h3 id="json-jtoken-jobject-jarray" tabindex="-1"><a class="header-anchor" href="#json-jtoken-jobject-jarray" aria-hidden="true">#</a> JSON JToken/JObject/JArray</h3><table><thead><tr><th>\u8868\u8FBE\u5F0F</th><th>MySql</th><th>SqlServer</th><th>PostgreSQL</th><th>Oracle</th><th>\u529F\u80FD\u8BF4\u660E</th></tr></thead><tbody><tr><td>a.Count</td><td>-</td><td>-</td><td>jsonb_array_length(coalesce(a, &#39;[]))</td><td>-</td><td>json\u6570\u7EC4\u7C7B\u578B\u7684\u957F\u5EA6</td></tr><tr><td>a.Any()</td><td>-</td><td>-</td><td>jsonb_array_length(coalesce(a, &#39;[])) &gt; 0</td><td>-</td><td>json\u6570\u7EC4\u7C7B\u578B\uFF0C\u662F\u5426\u4E3A\u7A7A</td></tr><tr><td>a.Contains(b)</td><td>-</td><td>-</td><td>coalesce(a, &#39;{}&#39;) @&gt; b::jsonb</td><td>-</td><td>json\u4E2D\u662F\u5426\u5305\u542Bb</td></tr><tr><td>a.ContainsKey(b)</td><td>-</td><td>-</td><td>coalesce(a, &#39;{}&#39;) ? b</td><td>-</td><td>json\u4E2D\u662F\u5426\u5305\u542B\u952Eb</td></tr><tr><td>a.Concat(b)</td><td>-</td><td>-</td><td>coalesce(a, &#39;{}&#39;)</td><td></td><td>b::jsonb</td></tr><tr><td>Parse(a)</td><td>-</td><td>-</td><td>a::jsonb</td><td>-</td><td>\u8F6C\u5316\u5B57\u7B26\u4E32\u4E3Ajson\u7C7B\u578B</td></tr><tr><td>a.Field[&quot;x&quot;]</td><td>-</td><td>-</td><td>a.Field-&gt;x</td><td>-</td><td>json\u6210\u5458\u8BBF\u95EE</td></tr></tbody></table><h3 id="\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5B57\u7B26\u4E32</h3><table><thead><tr><th>\u8868\u8FBE\u5F0F</th><th>MySql</th><th>SqlServer</th><th>PostgreSQL</th><th>Oracle</th><th>Sqlite</th></tr></thead><tbody><tr><td>string.Empty</td><td>&#39;&#39;</td><td>&#39;&#39;</td><td>&#39;&#39;</td><td>&#39;&#39;</td><td></td></tr><tr><td>string.IsNullOrEmpty(a)</td><td>(a is null or a = &#39;&#39;)</td><td>(a is null or a = &#39;&#39;)</td><td>(a is null or a = &#39;&#39;)</td><td>(a is null or a = &#39;&#39;)</td><td>(a is null or a = &#39;&#39;)</td></tr><tr><td>string.Concat(a,b,c...)</td><td>concat(a, b, c)</td><td>a + b + c</td><td>a || b || c</td><td>a || b || c</td><td>a || b || c</td></tr><tr><td>a.CompareTo(b)</td><td>strcmp(a, b)</td><td>-</td><td>case when a = b then 0 when a &gt; b then 1 else -1 end</td><td>case when a = b then 0 when a &gt; b then 1 else -1 end</td><td>case when a = b then 0 when a &gt; b then 1 else -1 end</td></tr><tr><td>a.Contains(&#39;b&#39;)</td><td>a like &#39;%b%&#39;</td><td>a like &#39;%b%&#39;</td><td>a ilike&#39;%b%&#39;</td><td>a like &#39;%b%&#39;</td><td>a like &#39;%b%&#39;</td></tr><tr><td>a.EndsWith(&#39;b&#39;)</td><td>a like &#39;%b&#39;</td><td>a like &#39;%b&#39;</td><td>a ilike&#39;%b&#39;</td><td>a like &#39;%b&#39;</td><td>a like &#39;%b&#39;</td></tr><tr><td>a.IndexOf(b)</td><td>locate(a, b) - 1</td><td>locate(a, b) - 1</td><td>strpos(a, b) - 1</td><td>instr(a, b, 1, 1) - 1</td><td>instr(a, b) - 1</td></tr><tr><td>a.Length</td><td>char_length(a)</td><td>len(a)</td><td>char_length(a)</td><td>length(a)</td><td>length(a)</td></tr><tr><td>a.PadLeft(b, c)</td><td>lpad(a, b, c)</td><td>-</td><td>lpad(a, b, c)</td><td>lpad(a, b, c)</td><td>lpad(a, b, c)</td></tr><tr><td>a.PadRight(b, c)</td><td>rpad(a, b, c)</td><td>-</td><td>rpad(a, b, c)</td><td>rpad(a, b, c)</td><td>rpad(a, b, c)</td></tr><tr><td>a.Replace(b, c)</td><td>replace(a, b, c)</td><td>replace(a, b, c)</td><td>replace(a, b, c)</td><td>replace(a, b, c)</td><td>replace(a, b, c)</td></tr><tr><td>a.StartsWith(&#39;b&#39;)</td><td>a like &#39;b%&#39;</td><td>a like &#39;b%&#39;</td><td>a ilike&#39;b%&#39;</td><td>a like &#39;b%&#39;</td><td>a like &#39;b%&#39;</td></tr><tr><td>a.Substring(b, c)</td><td>substr(a, b, c + 1)</td><td>substring(a, b, c + 1)</td><td>substr(a, b, c + 1)</td><td>substr(a, b, c + 1)</td><td>substr(a, b, c + 1)</td></tr><tr><td>a.ToLower</td><td>lower(a)</td><td>lower(a)</td><td>lower(a)</td><td>lower(a)</td><td>lower(a)</td></tr><tr><td>a.ToUpper</td><td>upper(a)</td><td>upper(a)</td><td>upper(a)</td><td>upper(a)</td><td>upper(a)</td></tr><tr><td>a.Trim</td><td>trim(a)</td><td>trim(a)</td><td>trim(a)</td><td>trim(a)</td><td>trim(a)</td></tr><tr><td>a.TrimEnd</td><td>rtrim(a)</td><td>rtrim(a)</td><td>rtrim(a)</td><td>rtrim(a)</td><td>rtrim(a)</td></tr><tr><td>a.TrimStart</td><td>ltrim(a)</td><td>ltrim(a)</td><td>ltrim(a)</td><td>ltrim(a)</td><td>ltrim(a)</td></tr><tr><td>a.FirstOrDefault</td><td>substr(a,1,1)</td><td>substring(a,1,1)</td><td>substr(a,1,1)</td><td>substr(a,1,1)</td><td>substr(a,1,1)</td></tr></tbody></table><blockquote><p>\u4F7F\u7528\u5B57\u7B26\u4E32\u51FD\u6570\u53EF\u80FD\u4F1A\u51FA\u73B0\u6027\u80FD\u74F6\u9888\uFF0C\u867D\u7136\u4E0D\u63A8\u8350\u4F7F\u7528\uFF0C\u4F46\u662F\u4F5C\u4E3A\u529F\u80FD\u5E93\u8FD9\u4E5F\u662F\u4E0D\u53EF\u7F3A\u5C11\u7684\u529F\u80FD\u4E4B\u4E00\u3002</p></blockquote><h3 id="\u65E5\u671F" tabindex="-1"><a class="header-anchor" href="#\u65E5\u671F" aria-hidden="true">#</a> \u65E5\u671F</h3><table><thead><tr><th>\u8868\u8FBE\u5F0F</th><th>MySql</th><th>SqlServer</th><th>PostgreSQL</th><th>Oracle</th></tr></thead><tbody><tr><td>DateTime.Now</td><td>now()</td><td>getdate()</td><td>current_timestamp</td><td>systimestamp</td></tr><tr><td>DateTime.UtcNow</td><td>utc_timestamp()</td><td>getutcdate()</td><td>(current_timestamp at time zone &#39;UTC&#39;)</td><td>sys_extract_utc(systimestamp)</td></tr><tr><td>DateTime.Today</td><td>curdate</td><td>convert(char(10),getdate(),120)</td><td>current_date</td><td>trunc(systimestamp)</td></tr><tr><td>DateTime.MaxValue</td><td>cast(&#39;9999/12/31 23:59:59&#39; as datetime)</td><td>&#39;9999/12/31 23:59:59&#39;</td><td>&#39;9999/12/31 23:59:59&#39;::timestamp</td><td>to_timestamp(&#39;9999-12-31 23:59:59&#39;,&#39;YYYY-MM-DD HH24:MI:SS.FF6&#39;)</td></tr><tr><td>DateTime.MinValue</td><td>cast(&#39;0001/1/1 0:00:00&#39; as datetime)</td><td>&#39;1753/1/1 0:00:00&#39;</td><td>&#39;0001/1/1 0:00:00&#39;::timestamp</td><td>to_timestamp(&#39;0001-01-01 00:00:00&#39;,&#39;YYYY-MM-DD HH24:MI:SS.FF6&#39;)</td></tr><tr><td>DateTime.Compare(a, b)</td><td>a - b</td><td>a - b</td><td>extract(epoch from a::timestamp-b::timestamp)</td><td>extract(day from (a-b))</td></tr><tr><td>DateTime.DaysInMonth(a, b)</td><td>dayofmonth(last_day(concat(a, &#39;-&#39;, b, &#39;-1&#39;)))</td><td>datepart(day, dateadd(day, -1, dateadd(month, 1, cast(a as varchar) + &#39;-&#39; + cast(b as varchar) + &#39;-1&#39;)))</td><td>extract(day from (a</td><td></td></tr><tr><td>DateTime.Equals(a, b)</td><td>a = b</td><td>a = b</td><td>a = b</td><td>a = b</td></tr><tr><td>DateTime.IsLeapYear(a)</td><td>a%4=0 and a%100&lt;&gt;0 or a%400=0</td><td>a%4=0 and a%100&lt;&gt;0 or a%400=0</td><td>a%4=0 and a%100&lt;&gt;0 or a%400=0</td><td>mod(a,4)=0 AND mod(a,100)&lt;&gt;0 OR mod(a,400)=0</td></tr><tr><td>DateTime.Parse(a)</td><td>cast(a as datetime)</td><td>cast(a as datetime)</td><td>a::timestamp</td><td>to_timestamp(a,&#39;YYYY-MM-DD HH24:MI:SS.FF6&#39;)</td></tr><tr><td>a.Add(b)</td><td>date_add(a, interval b microsecond)</td><td>dateadd(millisecond, b / 1000, a)</td><td>a::timestamp+(b</td><td></td></tr><tr><td>a.AddDays(b)</td><td>date_add(a, interval b day)</td><td>dateadd(day, b, a)</td><td>a::timestamp+(b</td><td></td></tr><tr><td>a.AddHours(b)</td><td>date_add(a, interval b hour)</td><td>dateadd(hour, b, a)</td><td>a::timestamp+(b</td><td></td></tr><tr><td>a.AddMilliseconds(b)</td><td>date_add(a, interval b*1000 microsecond)</td><td>dateadd(millisecond, b, a)</td><td>a::timestamp+(b</td><td></td></tr><tr><td>a.AddMinutes(b)</td><td>date_add(a, interval b minute)</td><td>dateadd(minute, b, a)</td><td>a::timestamp+(b</td><td></td></tr><tr><td>a.AddMonths(b)</td><td>date_add(a, interval b month)</td><td>dateadd(month, b, a)</td><td>a::timestamp+(b</td><td></td></tr><tr><td>a.AddSeconds(b)</td><td>date_add(a, interval b second)</td><td>dateadd(second, b, a)</td><td>a::timestamp+(b</td><td></td></tr><tr><td>a.AddTicks(b)</td><td>date_add(a, interval b/10 microsecond)</td><td>dateadd(millisecond, b / 10000, a)</td><td>a::timestamp+(b</td><td></td></tr><tr><td>a.AddYears(b)</td><td>date_add(a, interval b year)</td><td>dateadd(year, b, a)</td><td>a::timestamp+(b</td><td></td></tr><tr><td>a.Date</td><td>cast(date_format(a, &#39;%Y-%m-%d&#39;) as datetime)</td><td>convert(char(10),a,120)</td><td>a::date</td><td>trunc(a)</td></tr><tr><td>a.Day</td><td>dayofmonth(a)</td><td>datepart(day, a)</td><td>extract(day from a::timestamp)</td><td>cast(to_char(a,&#39;DD&#39;) as number)</td></tr><tr><td>a.DayOfWeek</td><td>dayofweek(a)</td><td>datepart(weekday, a) - 1</td><td>extract(dow from a::timestamp)</td><td>case when to_char(a)=&#39;7&#39; then 0 else cast(to_char(a) as number) end</td></tr><tr><td>a.DayOfYear</td><td>dayofyear(a)</td><td>datepart(dayofyear, a)</td><td>extract(doy from a::timestamp)</td><td>cast(to_char(a,&#39;DDD&#39;) as number)</td></tr><tr><td>a.Hour</td><td>hour(a)</td><td>datepart(hour, a)</td><td>extract(hour from a::timestamp)</td><td>cast(to_char(a,&#39;HH24&#39;) as number)</td></tr><tr><td>a.Millisecond</td><td>floor(microsecond(a) / 1000)</td><td>datepart(millisecond, a)</td><td>extract(milliseconds from a::timestamp)-extract(second from a::timestamp)*1000</td><td>cast(to_char(a,&#39;FF3&#39;) as number)</td></tr><tr><td>a.Minute</td><td>minute(a)</td><td>datepart(minute, a)</td><td>extract(minute from a::timestamp)</td><td>cast(to_char(a,&#39;MI&#39;) as number)</td></tr><tr><td>a.Month</td><td>month(a)</td><td>datepart(month, a)</td><td>extract(month from a::timestamp)</td><td>cast(to_char(a,&#39;FF3&#39;) as number)</td></tr><tr><td>a.Second</td><td>second(a)</td><td>datepart(second, a)</td><td>extract(second from a::timestamp)</td><td>cast(to_char(a,&#39;SS&#39;) as number)</td></tr><tr><td>a.Subtract(b)</td><td>timestampdiff(microsecond, b, a)</td><td>datediff(millisecond, b, a) * 1000</td><td>(extract(epoch from a::timestamp-b::timestamp)*1000000)</td><td>a - b</td></tr><tr><td>a.Ticks</td><td>timestampdiff(microsecond, &#39;0001-1-1&#39;, a) * 10</td><td>datediff(millisecond, &#39;1970-1-1&#39;, a) * 10000 + 621355968000000000</td><td>extract(epoch from a::timestamp)*10000000+621355968000000000</td><td>cast(to_char(a,&#39;FF7&#39;) as number)</td></tr><tr><td>a.TimeOfDay</td><td>timestampdiff(microsecond, date_format(a, &#39;%Y-%m-%d&#39;), a)</td><td>&#39;1970-1-1 &#39; + convert(varchar, a, 14)</td><td>extract(epoch from a::time)*1000000</td><td>a - trunc(a)</td></tr><tr><td>a.Year</td><td>year(a)</td><td>datepart(year, a)</td><td>extract(year from a::timestamp)</td><td>\u5E74</td></tr><tr><td>a.Equals(b)</td><td>a = b</td><td>a = b</td><td>a = b</td><td>a = b</td></tr><tr><td>a.CompareTo(b)</td><td>a - b</td><td>a - b</td><td>a - b</td><td>a - b</td></tr><tr><td>a.ToString()</td><td>date_format(a, &#39;%Y-%m-%d %H:%i:%s.%f&#39;)</td><td>convert(varchar, a, 121)</td><td>to_char(a, &#39;YYYY-MM-DD HH24:MI:SS.US&#39;)</td><td>to_char(a,&#39;YYYY-MM-DD HH24:MI:SS.FF6&#39;)</td></tr></tbody></table><h3 id="\u65F6\u95F4" tabindex="-1"><a class="header-anchor" href="#\u65F6\u95F4" aria-hidden="true">#</a> \u65F6\u95F4</h3><table><thead><tr><th>\u8868\u8FBE\u5F0F</th><th>MySql(\u5FAE\u79D2)</th><th>SqlServer(\u79D2)</th><th>PostgreSQL(\u5FAE\u79D2)</th><th>Oracle(Interval day(9) to second(7))</th></tr></thead><tbody><tr><td>TimeSpan.Zero</td><td>0</td><td>0</td><td>-</td><td>0\u5FAE\u79D2</td></tr><tr><td>TimeSpan.MaxValue</td><td>922337203685477580</td><td>922337203685477580</td><td>-</td><td>numtodsinterval(233720368.5477580,&#39;second&#39;)</td></tr><tr><td>TimeSpan.MinValue</td><td>-922337203685477580</td><td>-922337203685477580</td><td>-</td><td>numtodsinterval(-233720368.5477580,&#39;second&#39;)</td></tr><tr><td>TimeSpan.Compare(a, b)</td><td>a - b</td><td>a - b</td><td>-</td><td>extract(day from (a-b))</td></tr><tr><td>TimeSpan.Equals(a, b)</td><td>a = b</td><td>a = b</td><td>-</td><td>a = b</td></tr><tr><td>TimeSpan.FromDays(a)</td><td>a * 1000000 * 60 * 60 * 24</td><td>a * 1000000 * 60 * 60 * 24</td><td>-</td><td>numtodsinterval(a*86400,&#39;second&#39;)</td></tr><tr><td>TimeSpan.FromHours(a)</td><td>a * 1000000 * 60 * 60</td><td>a * 1000000 * 60 * 60</td><td>-</td><td>numtodsinterval(a*3600,&#39;second&#39;)</td></tr><tr><td>TimeSpan.FromMilliseconds(a)</td><td>a * 1000</td><td>a * 1000</td><td>-</td><td>numtodsinterval(a/1000,&#39;second&#39;)</td></tr><tr><td>TimeSpan.FromMinutes(a)</td><td>a * 1000000 * 60</td><td>a * 1000000 * 60</td><td>-</td><td>numtodsinterval(a*60,&#39;second&#39;)</td></tr><tr><td>TimeSpan.FromSeconds(a)</td><td>a * 1000000</td><td>a * 1000000</td><td>-</td><td>numtodsinterval(a,&#39;second&#39;)</td></tr><tr><td>TimeSpan.FromTicks(a)</td><td>a / 10</td><td>a / 10</td><td>-</td><td>numtodsinterval(a/10000000,&#39;second&#39;)</td></tr><tr><td>a.Add(b)</td><td>a + b</td><td>a + b</td><td>-</td><td>a + b</td></tr><tr><td>a.Subtract(b)</td><td>a - b</td><td>a - b</td><td>-</td><td>a - b</td></tr><tr><td>a.CompareTo(b)</td><td>a - b</td><td>a - b</td><td>-</td><td>extract(day from (a-b))</td></tr><tr><td>a.Days</td><td>a div (1000000 * 60 * 60 * 24)</td><td>a div (1000000 * 60 * 60 * 24)</td><td>-</td><td>extract(day from a)</td></tr><tr><td>a.Hours</td><td>a div (1000000 * 60 * 60) mod 24</td><td>a div (1000000 * 60 * 60) mod 24</td><td>-</td><td>extract(hour from a)</td></tr><tr><td>a.Milliseconds</td><td>a div 1000 mod 1000</td><td>a div 1000 mod 1000</td><td>-</td><td>cast(substr(extract(second from a)-floor(extract(second from a)),2,3) as number)</td></tr><tr><td>a.Seconds</td><td>a div 1000000 mod 60</td><td>a div 1000000 mod 60</td><td>-</td><td>extract(second from a)</td></tr><tr><td>a.Ticks</td><td>a * 10</td><td>a * 10</td><td>-</td><td>(extract(day from a)*86400+extract(hour from a)*3600+extract(minute from a)*60+extract(second from a))*10000000</td></tr><tr><td>a.TotalDays</td><td>a / (1000000 * 60 * 60 * 24)</td><td>a / (1000000 * 60 * 60 * 24)</td><td>-</td><td>extract(day from a)</td></tr><tr><td>a.TotalHours</td><td>a / (1000000 * 60 * 60)</td><td>a / (1000000 * 60 * 60)</td><td>-</td><td>(extract(day from a)*24+extract(hour from a))</td></tr><tr><td>a.TotalMilliseconds</td><td>a / 1000</td><td>a / 1000</td><td>-</td><td>(extract(day from a)*86400+extract(hour from a)*3600+extract(minute from a)*60+extract(second from a))*1000</td></tr><tr><td>a.TotalMinutes</td><td>a / (1000000 * 60)</td><td>a / (1000000 * 60)</td><td>-</td><td></td></tr><tr><td>a.TotalSeconds</td><td>a / 1000000</td><td>a / 1000000</td><td>-</td><td>(extract(day from a)*86400+extract(hour from a)*3600+extract(minute from a)*60+extract(second from a))</td></tr><tr><td>a.Equals(b)</td><td>a = b</td><td>a = b</td><td>-</td><td>a = b</td></tr><tr><td>a.ToString()</td><td>cast(a as varchar)</td><td>cast(a as varchar)</td><td>-</td><td>to_char(a)</td></tr></tbody></table><h3 id="\u6570\u5B66\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B66\u51FD\u6570" aria-hidden="true">#</a> \u6570\u5B66\u51FD\u6570</h3><table><thead><tr><th>\u8868\u8FBE\u5F0F</th><th>MySql</th><th>SqlServer</th><th>PostgreSQL</th><th>Oracle</th></tr></thead><tbody><tr><td>Math.Abs(a)</td><td>abs(a)</td><td>abs(a)</td><td>abs(a)</td><td></td></tr><tr><td>Math.Acos(a)</td><td>acos(a)</td><td>acos(a)</td><td>acos(a)</td><td>acos(a)</td></tr><tr><td>Math.Asin(a)</td><td>asin(a)</td><td>asin(a)</td><td>asin(a)</td><td>asin(a)</td></tr><tr><td>Math.Atan(a)</td><td>atan(a)</td><td>atan(a)</td><td>atan(a)</td><td>atan(a)</td></tr><tr><td>Math.Atan2(a, b)</td><td>atan2(a, b)</td><td>atan2(a, b)</td><td>atan2(a, b)</td><td>-</td></tr><tr><td>Math.Ceiling(a)</td><td>ceiling(a)</td><td>ceiling(a)</td><td>ceiling(a)</td><td>ceil(a)</td></tr><tr><td>Math.Cos(a)</td><td>cos(a)</td><td>cos(a)</td><td>cos(a)</td><td>cos(a)</td></tr><tr><td>Math.Exp(a)</td><td>exp(a)</td><td>exp(a)</td><td>exp(a)</td><td>exp(a)</td></tr><tr><td>Math.Floor(a)</td><td>floor(a)</td><td>floor(a)</td><td>floor(a)</td><td>floor(a)</td></tr><tr><td>Math.Log(a)</td><td>log(a)</td><td>log(a)</td><td>log(a)</td><td>log(e,a)</td></tr><tr><td>Math.Log10(a)</td><td>log10(a)</td><td>log10(a)</td><td>log10(a)</td><td>log(10,a)</td></tr><tr><td>Math.PI(a)</td><td>3.1415926535897931</td><td>3.1415926535897931</td><td>3.1415926535897931</td><td>3.1415926535897931</td></tr><tr><td>Math.Pow(a, b)</td><td>pow(a, b)</td><td>power(a, b)</td><td>pow(a, b)</td><td>power(a, b)</td></tr><tr><td>Math.Round(a, b)</td><td>round(a, b)</td><td>round(a, b)</td><td>round(a, b)</td><td>round(a, b)</td></tr><tr><td>Math.Sign(a)</td><td>sign(a)</td><td>sign(a)</td><td>sign(a)</td><td>sign(a)</td></tr><tr><td>Math.Sin(a)</td><td>sin(a)</td><td>sin(a)</td><td>sin(a)</td><td>sin(a)</td></tr><tr><td>Math.Sqrt(a)</td><td>sqrt(a)</td><td>sqrt(a)</td><td>sqrt(a)</td><td>sqrt(a)</td></tr><tr><td>Math.Tan(a)</td><td>tan(a)</td><td>tan(a)</td><td>tan(a)</td><td>tan(a)</td></tr><tr><td>Math.Truncate(a)</td><td>truncate(a, 0)</td><td>floor(a)</td><td>trunc(a, 0)</td><td>trunc(a, 0)</td></tr></tbody></table><h3 id="\u7C7B\u578B\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a> \u7C7B\u578B\u8F6C\u6362</h3><table><thead><tr><th>\u8868\u8FBE\u5F0F</th><th>MySql</th><th>SqlServer</th><th>PostgreSQL</th><th>Oracle</th><th>Sqlite</th></tr></thead><tbody><tr><td>Convert.ToBoolean(a) | bool.Parse(a)</td><td>a not in (&#39;0&#39;,&#39;false&#39;)</td><td>a not in (&#39;0&#39;,&#39;false&#39;)</td><td>a::varchar not in (&#39;0&#39;,&#39;false&#39;,&#39;f&#39;,&#39;no&#39;)</td><td>-</td><td>a not in (&#39;0&#39;,&#39;false&#39;)</td></tr><tr><td>Convert.ToByte(a) | byte.Parse(a)</td><td>cast(a as unsigned)</td><td>cast(a as tinyint)</td><td>a::int2</td><td>cast(a as number)</td><td>cast(a as int2)</td></tr><tr><td>Convert.ToChar(a)</td><td>substr(cast(a as char),1,1)</td><td>substring(cast(a as nvarchar),1,1)</td><td>substr(a::char,1,1)</td><td>substr(to_char(a),1,1)</td><td>substr(cast(a as character),1,1)</td></tr><tr><td>Convert.ToDateTime(a) | DateTime.Parse(a)</td><td>cast(a as datetime)</td><td>cast(a as datetime)</td><td>a::timestamp</td><td>to_timestamp(a,&#39;YYYY-MM-DD HH24:MI:SS.FF6&#39;)</td><td>datetime(a)</td></tr><tr><td>Convert.ToDecimal(a) | decimal.Parse(a)</td><td>cast(a as decimal(36,18))</td><td>cast(a as decimal(36,19))</td><td>a::numeric</td><td>cast(a as number)</td><td>cast(a as decimal(36,18))</td></tr><tr><td>Convert.ToDouble(a) | double.Parse(a)</td><td>cast(a as decimal(32,16))</td><td>cast(a as decimal(32,16))</td><td>a::float8</td><td>cast(a as number)</td><td>cast(a as double)</td></tr><tr><td>Convert.ToInt16(a) | short.Parse(a)</td><td>cast(a as signed)</td><td>cast(a as smallint)</td><td>a::int2</td><td>cast(a as number)</td><td>cast(a as smallint)</td></tr><tr><td>Convert.ToInt32(a) | int.Parse(a)</td><td>cast(a as signed)</td><td>cast(a as int)</td><td>a::int4</td><td>cast(a as number)</td><td>cast(a as smallint)</td></tr><tr><td>Convert.ToInt64(a) | long.Parse(a)</td><td>cast(a as signed)</td><td>cast(a as bigint)</td><td>a::int8</td><td>cast(a as number)</td><td>cast(a as smallint)</td></tr><tr><td>Convert.ToSByte(a) | sbyte.Parse(a)</td><td>cast(a as signed)</td><td>cast(a as tinyint)</td><td>a::int2</td><td>cast(a as number)</td><td>cast(a as smallint)</td></tr><tr><td>Convert.ToSingle(a) | float.Parse(a)</td><td>cast(a as decimal(14,7))</td><td>cast(a as decimal(14,7))</td><td>a::float4</td><td>cast(a as number)</td><td>cast(a as float)</td></tr><tr><td>Convert.ToString(a)</td><td>cast(a as char)</td><td>cast(a as nvarchar)</td><td>a::varchar</td><td>to_char(a)</td><td>cast(a as character)</td></tr><tr><td>Convert.ToUInt16(a) | ushort.Parse(a)</td><td>cast(a as unsigned)</td><td>cast(a as smallint)</td><td>a::int2</td><td>cast(a as number)</td><td>cast(a as unsigned)</td></tr><tr><td>Convert.ToUInt32(a) | uint.Parse(a)</td><td>cast(a as unsigned)</td><td>cast(a as int)</td><td>a::int4</td><td>cast(a as number)</td><td>cast(a as decimal(10,0))</td></tr><tr><td>Convert.ToUInt64(a) | ulong.Parse(a)</td><td>cast(a as unsigned)</td><td>cast(a as bigint)</td><td>a::int8</td><td>cast(a as number)</td><td>cast(a as decimal(21,0))</td></tr><tr><td>Guid.Parse(a)</td><td>substr(cast(a as char),1,36)</td><td>cast(a as uniqueidentifier)</td><td>a::uuid</td><td>substr(to_char(a),1,36)</td><td>substr(cast(a as character),1,36)</td></tr><tr><td>Guid.NewGuid()</td><td>-</td><td>newid()</td><td>-</td><td>-</td><td>-</td></tr><tr><td>new Random().NextDouble()</td><td>rand()</td><td>rand()</td><td>random()</td><td>dbms_random.value</td><td>random()</td></tr></tbody></table>`,43);function I(E,D){const t=o("ExternalLinkIcon");return l(),c(d,null,[u,i,k,a("ul",null,[a("li",null,[b,m,h,g,a("a",f,[y,s(t)])])]),T,a("blockquote",null,[a("p",null,[S,a("a",v,[q,s(t)])])]),x,a("blockquote",null,[a("p",null,[w,a("a",C,[_,s(t)])])]),M],64)}var P=e(r,[["render",I],["__file","expression-function.html.vue"]]);export{P as default};

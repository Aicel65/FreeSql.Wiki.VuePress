import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,c,a as n,b as p,F as l,e as s,d as t,o as u}from"./app.27c6f18e.js";const i={},r=n("h1",{id:"aop-freesql-\u8DE8\u65B9\u6CD5\u5F02\u6B65\u4E8B\u52A1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#aop-freesql-\u8DE8\u65B9\u6CD5\u5F02\u6B65\u4E8B\u52A1","aria-hidden":"true"},"#"),s(" AOP+FreeSql \u8DE8\u65B9\u6CD5\u5F02\u6B65\u4E8B\u52A1")],-1),k=n("p",null,"\u4F7F\u7528Autofac\u57FA\u4E8E\u7279\u6027\u6807\u7B7E\uFF0C\u5B9E\u73B0\u8DE8\u65B9\u6CD5\u7684\u5F02\u6B65\u4E8B\u52A1\u5904\u7406",-1),b=n("ul",null,[n("li",null,"Autofac.Extensions.DependencyInjection"),n("li",null,"Autofac.Extras.DynamicProxy"),n("li",null,"Castle.Core.AsyncInterceptor(\u5F02\u6B65\u65B9\u6CD5AOP\u62E6\u622A)")],-1),m=n("h2",{id:"\u6E90\u7801",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6E90\u7801","aria-hidden":"true"},"#"),s(" \u6E90\u7801")],-1),d={href:"https://github.com/luoyunchong/dotnetcore-examples/blob/master/ORM/FreeSql/OvOv.FreeSql.AutoFac.DynamicProxy",target:"_blank",rel:"noopener noreferrer"},g=s("OvOv.FreeSql.AutoFac.DynamicProxy"),y=t(`<p>csproj</p><div class="language-csproj ext-csproj line-numbers-mode"><pre class="language-csproj"><code>&lt;PackageReference Include=&quot;Autofac.Extensions.DependencyInjection&quot; Version=&quot;6.0.0&quot; /&gt;
&lt;PackageReference Include=&quot;Autofac.Extras.DynamicProxy&quot; Version=&quot;5.0.0&quot; /&gt;
&lt;PackageReference Include=&quot;Castle.Core.AsyncInterceptor&quot; Version=&quot;1.7.0&quot; /&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6216</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet <span class="token function">add</span> package Autofac.Extensions.DependencyInjection
dotnet <span class="token function">add</span> package Autofac.Extras.DynamicProxy
dotnet <span class="token function">add</span> package Castle.Core.AsyncInterceptor
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u521B\u5EFA\u4E00\u4E2A\u6807\u8BC6\u4E8B\u52A1\u7684\u7279\u6027\u6807\u7B7E</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AttributeUsage</span><span class="token attribute-arguments"><span class="token punctuation">(</span>AttributeTargets<span class="token punctuation">.</span>Method<span class="token punctuation">,</span> Inherited <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransactionalAttribute</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Attribute</span></span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// \u4E8B\u52A1\u4F20\u64AD\u65B9\u5F0F</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Propagation</span> Propagation <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> Propagation<span class="token punctuation">.</span>Required<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// \u4E8B\u52A1\u9694\u79BB\u7EA7\u522B</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name">IsolationLevel<span class="token punctuation">?</span></span> IsolationLevel <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="autofac" tabindex="-1"><a class="header-anchor" href="#autofac" aria-hidden="true">#</a> Autofac</h2><p>Program.CS \u66FF\u6362\u9ED8\u8BA4\u7684DI CreateHostBuilder\u65B9\u6CD5</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code> Host<span class="token punctuation">.</span><span class="token function">CreateDefaultBuilder</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UseServiceProviderFactory</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">AutofacServiceProviderFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Startup.cs\u914D\u7F6E\u670D\u52A1</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureContainer</span><span class="token punctuation">(</span><span class="token class-name">ContainerBuilder</span> builder<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    builder<span class="token punctuation">.</span><span class="token function">RegisterModule</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">AutofacModule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>.NET6 \u8FD9\u6837\u6CE8\u518C</p></blockquote><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// Add services to the container.</span>
builder<span class="token punctuation">.</span>Host
    <span class="token punctuation">.</span><span class="token function">UseServiceProviderFactory</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">AutofacServiceProviderFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ConfigureContainer</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ContainerBuilder<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>webBuilder<span class="token punctuation">,</span> containerBuilder<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
          containerBuilder<span class="token punctuation">.</span><span class="token function">RegisterModule</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">AutofacModule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FD9\u91CC\u7ED9BlogService\u65B9\u6CD5\u6CE8\u5165UnitOfWorkInterceptor\u62E6\u622A\u5904\u7406\u3002\u76F4\u63A5\u6CE8\u5165\u7C7B\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutofacModule</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Autofac<span class="token punctuation">.</span>Module</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Load</span><span class="token punctuation">(</span><span class="token class-name">ContainerBuilder</span> builder<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        builder<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterType</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UnitOfWorkInterceptor<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        builder<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterType</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UnitOfWorkAsyncInterceptor<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        builder<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterType</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>BlogService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">InterceptedBy</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">UnitOfWorkInterceptor</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">EnableClassInterceptors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,15),f=s("\u5F53\u7136\u6211\u4EEC\u4E5F\u80FD\u4F7F\u7528autofac\u6279\u91CF\u6CE8\u5165\u4EE5Service\u540E\u7F00\u7684\u63A5\u53E3\u3002\u8BE5\u65B9\u6CD5\u5728lin-cms-dotnetcore\u9879\u76EE\u4E2D\u6709\u4F7F\u7528"),h={href:"https://github.com/luoyunchong/lin-cms-dotnetcore/blob/master/src/LinCms.Web/Startup/Configuration/ServiceModule.cs",target:"_blank",rel:"noopener noreferrer"},v=s("https://github.com/luoyunchong/lin-cms-dotnetcore/blob/master/src/LinCms.Web/Startup/Configuration/ServiceModule.cs"),w=t(`<div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>    <span class="token class-name">List<span class="token punctuation">&lt;</span>Type<span class="token punctuation">&gt;</span></span> interceptorServiceTypes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Type<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">UnitOfWorkInterceptor</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>  
    <span class="token comment">//service\u6240\u5728dll</span>
    <span class="token class-name">Assembly</span> servicesDllFile <span class="token operator">=</span> Assembly<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span><span class="token string">&quot;LinCms.Application&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    builder<span class="token punctuation">.</span><span class="token function">RegisterAssemblyTypes</span><span class="token punctuation">(</span>servicesDllFile<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">EndsWith</span><span class="token punctuation">(</span><span class="token string">&quot;Service&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">AsImplementedInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">InstancePerLifetimeScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">PropertiesAutowired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// \u5C5E\u6027\u6CE8\u5165</span>
            <span class="token punctuation">.</span><span class="token function">InterceptedBy</span><span class="token punctuation">(</span>interceptorServiceTypes<span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">EnableInterfaceInterceptors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="aop" tabindex="-1"><a class="header-anchor" href="#aop" aria-hidden="true">#</a> AOP</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UnitOfWorkInterceptor</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IInterceptor</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">UnitOfWorkAsyncInterceptor</span> asyncInterceptor<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">UnitOfWorkInterceptor</span><span class="token punctuation">(</span><span class="token class-name">UnitOfWorkAsyncInterceptor</span> interceptor<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            asyncInterceptor <span class="token operator">=</span> interceptor<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Intercept</span><span class="token punctuation">(</span><span class="token class-name">IInvocation</span> invocation<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            asyncInterceptor<span class="token punctuation">.</span><span class="token function">ToInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Intercept</span><span class="token punctuation">(</span>invocation<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UnitOfWorkAsyncInterceptor</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IAsyncInterceptor</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">UnitOfWorkManager</span> _unitOfWorkManager<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>UnitOfWorkAsyncInterceptor<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>
        <span class="token class-name">IUnitOfWork</span> _unitOfWork<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">UnitOfWorkAsyncInterceptor</span><span class="token punctuation">(</span><span class="token class-name">UnitOfWorkManager</span> unitOfWorkManager<span class="token punctuation">,</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>UnitOfWorkAsyncInterceptor<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            _unitOfWorkManager <span class="token operator">=</span> unitOfWorkManager<span class="token punctuation">;</span>
            _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">TryBegin</span><span class="token punctuation">(</span><span class="token class-name">IInvocation</span> invocation<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//_unitOfWork = _unitOfWorkManager.Begin(Propagation.Requierd);</span>
            <span class="token comment">//return true;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> method <span class="token operator">=</span> invocation<span class="token punctuation">.</span>MethodInvocationTarget <span class="token operator">??</span> invocation<span class="token punctuation">.</span>Method<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> attribute <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">GetCustomAttributes</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">TransactionalAttribute</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>attribute <span class="token keyword">is</span> <span class="token class-name">TransactionalAttribute</span> transaction<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                _unitOfWork <span class="token operator">=</span> _unitOfWorkManager<span class="token punctuation">.</span><span class="token function">Begin</span><span class="token punctuation">(</span>transaction<span class="token punctuation">.</span>Propagation<span class="token punctuation">,</span> transaction<span class="token punctuation">.</span>IsolationLevel<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// \u62E6\u622A\u540C\u6B65\u6267\u884C\u7684\u65B9\u6CD5</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>invocation<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InterceptSynchronous</span><span class="token punctuation">(</span><span class="token class-name">IInvocation</span> invocation<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">TryBegin</span><span class="token punctuation">(</span>invocation<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> hashCode <span class="token operator">=</span> _unitOfWork<span class="token punctuation">.</span><span class="token function">GetHashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span>
                <span class="token punctuation">{</span>
                    invocation<span class="token punctuation">.</span><span class="token function">Proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;----- \u62E6\u622A\u540C\u6B65\u6267\u884C\u7684\u65B9\u6CD5-\u4E8B\u52A1 </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">hashCode</span><span class="token punctuation">}</span></span><span class="token string"> \u63D0\u4EA4\u524D----- &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    _unitOfWork<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;----- \u62E6\u622A\u540C\u6B65\u6267\u884C\u7684\u65B9\u6CD5-\u4E8B\u52A1 </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">hashCode</span><span class="token punctuation">}</span></span><span class="token string"> \u63D0\u4EA4\u6210\u529F----- &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">catch</span>
                <span class="token punctuation">{</span>
                    _logger<span class="token punctuation">.</span><span class="token function">LogError</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;----- \u62E6\u622A\u540C\u6B65\u6267\u884C\u7684\u65B9\u6CD5-\u4E8B\u52A1 </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">hashCode</span><span class="token punctuation">}</span></span><span class="token string"> \u63D0\u4EA4\u5931\u8D25----- &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    _unitOfWork<span class="token punctuation">.</span><span class="token function">Rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">throw</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">finally</span>
                <span class="token punctuation">{</span>
                    _unitOfWork<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                invocation<span class="token punctuation">.</span><span class="token function">Proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// \u62E6\u622A\u8FD4\u56DE\u7ED3\u679C\u4E3ATask\u7684\u65B9\u6CD5</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>invocation<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InterceptAsynchronous</span><span class="token punctuation">(</span><span class="token class-name">IInvocation</span> invocation<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">TryBegin</span><span class="token punctuation">(</span>invocation<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                invocation<span class="token punctuation">.</span>ReturnValue <span class="token operator">=</span> <span class="token function">InternalInterceptAsynchronous</span><span class="token punctuation">(</span>invocation<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                invocation<span class="token punctuation">.</span><span class="token function">Proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">InternalInterceptAsynchronous</span><span class="token punctuation">(</span><span class="token class-name">IInvocation</span> invocation<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">string</span></span> methodName <span class="token operator">=</span>
                <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">invocation<span class="token punctuation">.</span>MethodInvocationTarget<span class="token punctuation">.</span>DeclaringType<span class="token punctuation">?.</span>FullName</span><span class="token punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">invocation<span class="token punctuation">.</span>Method<span class="token punctuation">.</span>Name</span><span class="token punctuation">}</span></span><span class="token string">()&quot;</span></span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> hashCode <span class="token operator">=</span> _unitOfWork<span class="token punctuation">.</span><span class="token function">GetHashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">using</span> <span class="token punctuation">(</span>_logger<span class="token punctuation">.</span><span class="token function">BeginScope</span><span class="token punctuation">(</span><span class="token string">&quot;_unitOfWork:{hashCode}&quot;</span><span class="token punctuation">,</span> hashCode<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;----- async Task \u5F00\u59CB\u4E8B\u52A1</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">hashCode</span><span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">methodName</span><span class="token punctuation">}</span></span><span class="token string">----- &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">try</span>
                <span class="token punctuation">{</span>
                    invocation<span class="token punctuation">.</span><span class="token function">Proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                   <span class="token comment">//\u5904\u7406Task\u8FD4\u56DE\u4E00\u4E2Anull\u503C\u7684\u60C5\u51B5\u4F1A\u5BFC\u81F4\u7A7A\u6307\u9488</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>invocation<span class="token punctuation">.</span>ReturnValue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">await</span> <span class="token punctuation">(</span>Task<span class="token punctuation">)</span>invocation<span class="token punctuation">.</span>ReturnValue<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    _unitOfWork<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;----- async Task \u4E8B\u52A1 </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">hashCode</span><span class="token punctuation">}</span></span><span class="token string"> Commit----- &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>Exception</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    _unitOfWork<span class="token punctuation">.</span><span class="token function">Rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    _logger<span class="token punctuation">.</span><span class="token function">LogError</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;----- async Task \u4E8B\u52A1 </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">hashCode</span><span class="token punctuation">}</span></span><span class="token string"> Rollback----- &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">throw</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">finally</span>
                <span class="token punctuation">{</span>
                    _unitOfWork<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>


        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// \u62E6\u622A\u8FD4\u56DE\u7ED3\u679C\u4E3ATask<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TResult</span><span class="token punctuation">&gt;</span></span>\u7684\u65B9\u6CD5</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>invocation<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeparam</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TResult<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeparam</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token generic-method"><span class="token function">InterceptAsynchronous</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">IInvocation</span> invocation<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            invocation<span class="token punctuation">.</span>ReturnValue <span class="token operator">=</span> <span class="token generic-method"><span class="token function">InternalInterceptAsynchronous</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>invocation<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">InternalInterceptAsynchronous</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">IInvocation</span> invocation<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">TResult</span> result<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">TryBegin</span><span class="token punctuation">(</span>invocation<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">string</span></span> methodName <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">invocation<span class="token punctuation">.</span>MethodInvocationTarget<span class="token punctuation">.</span>DeclaringType<span class="token punctuation">?.</span>FullName</span><span class="token punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">invocation<span class="token punctuation">.</span>Method<span class="token punctuation">.</span>Name</span><span class="token punctuation">}</span></span><span class="token string">()&quot;</span></span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">int</span></span> hashCode <span class="token operator">=</span> _unitOfWork<span class="token punctuation">.</span><span class="token function">GetHashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;----- async Task&lt;TResult&gt; \u5F00\u59CB\u4E8B\u52A1</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">hashCode</span><span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">methodName</span><span class="token punctuation">}</span></span><span class="token string">----- &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">try</span>
                <span class="token punctuation">{</span>
                    invocation<span class="token punctuation">.</span><span class="token function">Proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token punctuation">(</span>Task<span class="token operator">&lt;</span>TResult<span class="token operator">&gt;</span><span class="token punctuation">)</span>invocation<span class="token punctuation">.</span>ReturnValue<span class="token punctuation">;</span>
                    _unitOfWork<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;----- async Task&lt;TResult&gt; Commit\u4E8B\u52A1</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">hashCode</span><span class="token punctuation">}</span></span><span class="token string">----- &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>Exception</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    _unitOfWork<span class="token punctuation">.</span><span class="token function">Rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    _logger<span class="token punctuation">.</span><span class="token function">LogError</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;----- async Task&lt;TResult&gt; Rollback\u4E8B\u52A1</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">hashCode</span><span class="token punctuation">}</span></span><span class="token string">----- &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">throw</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">finally</span>
                <span class="token punctuation">{</span>
                    _unitOfWork<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                invocation<span class="token punctuation">.</span><span class="token function">Proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token punctuation">(</span>Task<span class="token operator">&lt;</span>TResult<span class="token operator">&gt;</span><span class="token punctuation">)</span>invocation<span class="token punctuation">.</span>ReturnValue<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> result<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br></div></div><p>\u5F53Service\u5C42\u6CA1\u6709\u63A5\u53E3\uFF0C\u5219\u5FC5\u987B\u4F7F\u7528virtual\u865A\u65B9\u6CD5\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogService</span>
    <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// \u5F53\u51FA\u73B0\u5F02\u5E38\u65F6\uFF0C\u4E0D\u4F1A\u63D2\u5165\u6570\u636E</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createBlogDto<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token punctuation">[</span>Transactional<span class="token punctuation">]</span>
        <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CreateBlogTransactional</span><span class="token punctuation">(</span><span class="token class-name">CreateBlogDto</span> createBlogDto<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">Blog</span> blog <span class="token operator">=</span> _mapper<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Map</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Blog<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>createBlogDto<span class="token punctuation">)</span><span class="token punctuation">;</span>
            blog<span class="token punctuation">.</span>CreateTime <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">;</span>
            _blogRepository<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>blog<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">List<span class="token punctuation">&lt;</span>Tag<span class="token punctuation">&gt;</span></span> tags <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Tag<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            createBlogDto<span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">ForEach</span><span class="token punctuation">(</span>r <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                tags<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Tag</span> <span class="token punctuation">{</span> TagName <span class="token operator">=</span> r <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>createBlogDto<span class="token punctuation">.</span>Title <span class="token operator">==</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;test exception&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            _tagRepository<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>tags<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="iunitofworkmanager-\u5F00\u542F\u4E8B\u52A1" tabindex="-1"><a class="header-anchor" href="#iunitofworkmanager-\u5F00\u542F\u4E8B\u52A1" aria-hidden="true">#</a> IUnitOfWorkManager \u5F00\u542F\u4E8B\u52A1</h2><p>\u5F53\u4E1A\u52A1\u9700\u8981\u5355\u72EC\u5F00\u542F\u4E8B\u52A1\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u76F4\u63A5\u5728Service\u5C42\u4F7F\u7528UnitOfWorkManager\u521B\u5EFAUnitOfWork\uFF0C\u9996\u5148\u6CE8\u5165\u81EA\u5B9A\u4E49Service\uFF0C\u4E5F\u53EF\u901A\u8FC7AutoFac\u6CE8\u5165\u3002</p><ul><li>\u9ED8\u8BA4\u7684DI</li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code> services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddScoped</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TransBlogService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>TransBlogService.cs</li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>Blog<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> _blogRepository<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>Tag<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> _tagRepository<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">UnitOfWorkManager</span> _unitOfWorkManager<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token function">TransBlogService</span><span class="token punctuation">(</span><span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>Blog<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> blogRepository<span class="token punctuation">,</span> <span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>Tag<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> tagRepository<span class="token punctuation">,</span><span class="token class-name">UnitOfWorkManager</span> unitOfWorkManager<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    _blogRepository <span class="token operator">=</span> blogRepository <span class="token punctuation">;</span>
    _tagRepository <span class="token operator">=</span> tagRepository <span class="token punctuation">;</span>
    _unitOfWorkManager <span class="token operator">=</span> unitOfWorkManager<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">CreateBlogUnitOfWorkAsync</span><span class="token punctuation">(</span><span class="token class-name">Blog</span> blog<span class="token punctuation">,</span>List<span class="token operator">&lt;</span>Tag<span class="token operator">&gt;</span>tagList<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">IUnitOfWork</span> unitOfWork <span class="token operator">=</span> _unitOfWorkManager<span class="token punctuation">.</span><span class="token function">Begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">await</span> _blogRepository<span class="token punctuation">.</span><span class="token function">InsertAsync</span><span class="token punctuation">(</span>blog<span class="token punctuation">)</span><span class="token punctuation">;</span>
            tagList<span class="token punctuation">.</span><span class="token function">ForEach</span><span class="token punctuation">(</span>r <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                r<span class="token punctuation">.</span>PostId <span class="token operator">=</span> blog<span class="token punctuation">.</span>Id<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">await</span> _tagRepository<span class="token punctuation">.</span><span class="token function">InsertAsync</span><span class="token punctuation">(</span>tagList<span class="token punctuation">)</span><span class="token punctuation">;</span>
            unitOfWork<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>     
            <span class="token comment">//\u5B9E\u9645 \u53EF\u4EE5\u4E0DRollback\u3002\u56E0\u4E3AIUnitOfWork\u5185\u90E8Dispose\uFF0C\u4F1A\u628A\u6CA1\u6709Commit\u7684\u4E8B\u52A1Rollback\u56DE\u6765\uFF0C\u4F46\u80FD\u63D0\u524DRollback</span>
        
            unitOfWork<span class="token punctuation">.</span><span class="token function">Rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u8BB0\u5F55\u65E5\u5FD7\u3001\u6216\u7EE7\u7EEDthrow;\u51FA\u6765</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">UpdateBlogAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> id<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">IUnitOfWork</span> unitOfWork <span class="token operator">=</span> _unitOfWorkManager<span class="token punctuation">.</span><span class="token function">Begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">Blog</span> blog <span class="token operator">=</span> _blogRepository<span class="token punctuation">.</span>Select<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>r <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span>Id <span class="token operator">==</span> id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            blog<span class="token punctuation">.</span>IsDeleted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">await</span> _blogRepository<span class="token punctuation">.</span><span class="token function">UpdateAsync</span><span class="token punctuation">(</span>blog<span class="token punctuation">)</span><span class="token punctuation">;</span>
            unitOfWork<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
           <span class="token comment">//\u8BB0\u5F55\u65E5\u5FD7\u3001\u6216\u7EE7\u7EEDthrow;\u51FA\u6765</span>
            unitOfWork<span class="token punctuation">.</span><span class="token function">Rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><table><thead><tr><th>IUnitOfWork \u6210\u5458</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>IFreeSql Orm</td><td>\u8BE5\u5BF9\u8C61 Select/Delete/Insert/Update/InsertOrUpdate \u4E0E\u5DE5\u4F5C\u5355\u5143\u4E8B\u52A1\u4FDD\u6301\u4E00\u81F4\uFF0C\u53EF\u7701\u7565\u4F20\u9012 WithTransaction</td></tr><tr><td>DbTransaction GetOrBeginTransaction()</td><td>\u5F00\u542F\u4E8B\u52A1\uFF0C\u6216\u8005\u8FD4\u56DE\u5DF2\u5F00\u542F\u7684\u4E8B\u52A1</td></tr><tr><td>void Commit()</td><td>\u63D0\u4EA4\u4E8B\u52A1</td></tr><tr><td>void Rollback()</td><td>\u56DE\u6EDA\u4E8B\u52A1</td></tr><tr><td>DbContext.EntityChangeReport EntityChangeReport</td><td>\u5DE5\u4F5C\u5355\u5143\u5185\u7684\u5B9E\u4F53\u53D8\u5316\u8DDF\u8E2A</td></tr></tbody></table><h2 id="\u5B8C\u6574\u7684\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u6574\u7684\u4EE3\u7801" aria-hidden="true">#</a> \u5B8C\u6574\u7684\u4EE3\u7801</h2>`,13),I={href:"https://github.com/luoyunchong/dotnetcore-examples/blob/master/ORM/FreeSql/OvOv.Core/Domain/Blog.cs",target:"_blank",rel:"noopener noreferrer"},_=s("Blog.cs"),O={href:"https://github.com/luoyunchong/dotnetcore-examples/blob/master/ORM/FreeSql/OvOv.Core/Domain/Tag.cs",target:"_blank",rel:"noopener noreferrer"},T=s("Tag.cs"),q={href:"https://github.com/luoyunchong/dotnetcore-examples/blob/master/ORM/FreeSql/OvOv.FreeSql.AutoFac.DynamicProxy/Services/TransBlogService.cs",target:"_blank",rel:"noopener noreferrer"},R=s("TransBlogService.cs"),x=t(`<p>\u4EE5\u4E0A\u4F7F\u7528\u7684\u662F\u6CDB\u578B\u4ED3\u50A8\uFF0C\u90A3\u6211\u4EEC\u5982\u679C\u662F\u91CD\u5199\u4E00\u4E2A\u4ED3\u50A8 \u5982\u4F55\u4FDD\u6301\u548C<code>UnitOfWorkManager</code>\u540C\u4E00\u4E2A\u4E8B\u52A1\u5462\u3002 \u7EE7\u627F\u73B0\u6709\u7684<code>DefaultRepository&lt;,&gt;</code>\u4ED3\u50A8\uFF0C\u5B9E\u73B0\u81EA\u5B9A\u4E49\u7684\u4ED3\u50A8<code>BlogRepository.cs</code>,</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogRepository</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">DefaultRepository<span class="token punctuation">&lt;</span>Blog<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">IBlogRepository</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token function">BlogRepository</span><span class="token punctuation">(</span><span class="token class-name">UnitOfWorkManager</span> uowm<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>uowm<span class="token punctuation">?.</span>Orm<span class="token punctuation">,</span> uowm<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>Blog<span class="token punctuation">&gt;</span></span> <span class="token function">GetBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Select<span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5176\u4E2D\u63A5\u53E3\u3002<code>IBlogRepository.cs</code></p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IBlogRepository</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>Blog<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token punctuation">{</span>
        <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>Blog<span class="token punctuation">&gt;</span></span> <span class="token function">GetBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5728 startup.cs\u6CE8\u5165\u6B64\u670D\u52A1</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>    services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddScoped</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IBlogRepository<span class="token punctuation">,</span> BlogRepository<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,6);function W(B,A){const a=o("ExternalLinkIcon");return u(),c(l,null,[r,k,b,m,n("ul",null,[n("li",null,[n("a",d,[g,p(a)])])]),y,n("ul",null,[n("li",null,[f,n("a",h,[v,p(a)])])]),w,n("ul",null,[n("li",null,[n("a",I,[_,p(a)])]),n("li",null,[n("a",O,[T,p(a)])]),n("li",null,[n("a",q,[R,p(a)])])]),x],64)}var M=e(i,[["render",W],["__file","aop-freesql-autofac.html.vue"]]);export{M as default};

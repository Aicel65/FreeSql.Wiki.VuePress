import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as t}from"./app.ef0f5203.js";const p={},e=t(`<h1 id="\u6027\u80FD" tabindex="-1"><a class="header-anchor" href="#\u6027\u80FD" aria-hidden="true">#</a> \u6027\u80FD</h1><p>FreeSql \u5B9E\u73B0\u4E86\u5F3A\u5927\u529F\u80FD\u7684\u540C\u65F6\uFF0C\u6027\u80FD\u6CA1\u6709\u53D7\u5230\u5F71\u54CD\uFF0C\u9879\u76EE\u4E2D\u4F7F\u7528\u53CD\u5C04\u6216\u8017\u65F6\u7684\u64CD\u4F5C\u90FD\u7ECF\u8FC7\u4E86\u7F13\u5B58\u5904\u7406\u3002\u8BFB\u53D6\u6570\u636E\u90E8\u5206\u91C7\u7528\u4E86 ExpressionTree\uFF0C\u4F7F\u5F97 FreeSql \u89E3\u6790\u5B9E\u4F53\u6570\u636E\u7684\u901F\u5EA6\u4E0E Dapper \u975E\u5E38\u63A5\u8FD1\u3002</p><h1 id="\u63D2\u5165\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6D4B\u8BD5" aria-hidden="true">#</a> \u63D2\u5165\u6D4B\u8BD5</h1><h3 id="\u6D4B\u8BD5\u7ED3\u679C-52-\u4E2A\u5B57\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5\u7ED3\u679C-52-\u4E2A\u5B57\u6BB5" aria-hidden="true">#</a> \u6D4B\u8BD5\u7ED3\u679C(52 \u4E2A\u5B57\u6BB5)</h3><table><thead><tr><th></th><th>18W</th><th>1W</th><th>5K</th><th>2K</th><th>1K</th><th>500</th><th>100</th><th>50</th></tr></thead><tbody><tr><td>MySql 5.5 ExecuteAffrows</td><td>38,481</td><td>2,234</td><td>1,136</td><td>284</td><td>239</td><td>167</td><td>66</td><td>30</td></tr><tr><td>MySql 5.5 ExecuteMySqlBulkCopy</td><td>28,405</td><td>1,142</td><td>657</td><td>451</td><td>435</td><td>592</td><td>47</td><td>22</td></tr><tr><td>SqlServer Express ExecuteAffrows</td><td>402,355</td><td>24,847</td><td>11,465</td><td>4,971</td><td>2,437</td><td>915</td><td>138</td><td>88</td></tr><tr><td>SqlServer Express ExecuteSqlBulkCopy</td><td>21,065</td><td>578</td><td>326</td><td>139</td><td>105</td><td>79</td><td>60</td><td>48</td></tr><tr><td>PostgreSQL 10 ExecuteAffrows</td><td>46,756</td><td>3,294</td><td>2,269</td><td>1,019</td><td>374</td><td>209</td><td>51</td><td>37</td></tr><tr><td>PostgreSQL 10 ExecutePgCopy</td><td>10,090</td><td>583</td><td>337</td><td>136</td><td>88</td><td>61</td><td>30</td><td>25</td></tr><tr><td>Oracle XE ExecuteAffrows</td><td>-</td><td>-</td><td>-</td><td>-</td><td>24,528</td><td>10,648</td><td>571</td><td>200</td></tr><tr><td>Sqlite ExecuteAffrows</td><td>28,554</td><td>1,149</td><td>701</td><td>327</td><td>155</td><td>91</td><td>44</td><td>35</td></tr></tbody></table><blockquote><p>18W \u89E3\u91CA\uFF1A\u63D2\u5165 18 \u4E07\u884C\u8BB0\u5F55\uFF0C\u8868\u683C\u4E2D\u7684\u6570\u5B57\u662F\u6267\u884C\u65F6\u95F4\uFF08\u5355\u4F4D ms\uFF09</p></blockquote><blockquote><p>Oracle \u63D2\u5165\u6027\u80FD\u4E0D\u7528\u6000\u7591\uFF0C\u53EF\u80FD\u5B89\u88C5\u5B66\u751F\u7248\u9650\u5236\u8F83\u5927</p></blockquote><p>\u63D0\u9192\uFF1A\u5F00\u6E90\u6570\u636E\u5E93\u6D4B\u8BD5\u7ED3\u679C\u6BD4\u8F83\u6709\u610F\u4E49\uFF0C\u5546\u4E1A\u6570\u636E\u5E93\u7248\u672C\u4E4B\u95F4\u6027\u80FD\u53EF\u80FD\u6709\u8F83\u5927\u5DEE\u8DDD</p><h3 id="\u6D4B\u8BD5\u7ED3\u679C-10-\u4E2A\u5B57\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5\u7ED3\u679C-10-\u4E2A\u5B57\u6BB5" aria-hidden="true">#</a> \u6D4B\u8BD5\u7ED3\u679C(10 \u4E2A\u5B57\u6BB5)</h3><table><thead><tr><th></th><th>18W</th><th>1W</th><th>5K</th><th>2K</th><th>1K</th><th>500</th><th>100</th><th>50</th></tr></thead><tbody><tr><td>MySql 5.5 ExecuteAffrows</td><td>11,171</td><td>866</td><td>366</td><td>80</td><td>83</td><td>50</td><td>24</td><td>34</td></tr><tr><td>MySql 5.5 ExecuteMySqlBulkCopy</td><td>6,504</td><td>399</td><td>257</td><td>116</td><td>87</td><td>100</td><td>16</td><td>16</td></tr><tr><td>SqlServer Express ExecuteAffrows</td><td>47,204</td><td>2,275</td><td>1,108</td><td>488</td><td>279</td><td>123</td><td>35</td><td>16</td></tr><tr><td>SqlServer Express ExecuteSqlBulkCopy</td><td>4,248</td><td>127</td><td>71</td><td>30</td><td>48</td><td>14</td><td>11</td><td>10</td></tr><tr><td>PostgreSQL 10 ExecuteAffrows</td><td>9,786</td><td>568</td><td>336</td><td>157</td><td>102</td><td>34</td><td>9</td><td>6</td></tr><tr><td>PostgreSQL 10 ExecutePgCopy</td><td>4,081</td><td>167</td><td>93</td><td>39</td><td>21</td><td>12</td><td>4</td><td>2</td></tr><tr><td>Oracle XE ExecuteAffrows</td><td>-</td><td>-</td><td>-</td><td>-</td><td>2,394</td><td>731</td><td>67</td><td>33</td></tr><tr><td>Sqlite ExecuteAffrows</td><td>4,524</td><td>246</td><td>137</td><td>94</td><td>35</td><td>19</td><td>14</td><td>11</td></tr></tbody></table><blockquote><p>\u6D4B\u8BD5\u7ED3\u679C\uFF0C\u662F\u5728\u76F8\u540C\u64CD\u4F5C\u7CFB\u7EDF\u4E0B\u8FDB\u884C\u7684\uFF0C\u5E76\u4E14\u90FD\u6709\u9884\u70ED</p></blockquote><blockquote><p>ExecuteMySqlBulkCopy \u65B9\u6CD5\u5728 FreeSql.Provider.MySqlConnector \u4E2D\u5B9E\u73B0\u7684</p></blockquote><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">//\u6D4B\u8BD5\u5B9E\u4F53\u7C7B</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestInsert10c</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>MapType <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">string</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> UserName0 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> PassWord0 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> CreateTime0 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> UserName1 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> PassWord1 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> CreateTime1 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> UserName2 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> PassWord2 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> CreateTime2 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u751F\u6210\u6D4B\u8BD5\u6570\u636E</span>
<span class="token class-name">IFreeSql</span> orm <span class="token operator">=</span> <span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> testCount <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> t10cs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>TestInsert10c<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> testCount<span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> item <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TestInsert10c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> b <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">;</span> b<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        orm<span class="token punctuation">.</span><span class="token function">SetEntityValueWithPropertyName</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">TestInsert10c</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">,</span> <span class="token string">&quot;UserName&quot;</span> <span class="token operator">+</span> b<span class="token punctuation">,</span> Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;N&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        orm<span class="token punctuation">.</span><span class="token function">SetEntityValueWithPropertyName</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">TestInsert10c</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">,</span> <span class="token string">&quot;PassWord&quot;</span> <span class="token operator">+</span> b<span class="token punctuation">,</span> Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;N&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        orm<span class="token punctuation">.</span><span class="token function">SetEntityValueWithPropertyName</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">TestInsert10c</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">,</span> <span class="token string">&quot;CreateTime&quot;</span> <span class="token operator">+</span> b<span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    t10cs<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u67E5\u8BE2\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8BE2\u6D4B\u8BD5" aria-hidden="true">#</a> \u67E5\u8BE2\u6D4B\u8BD5</h1><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name">IFreeSql</span> mysql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSql<span class="token punctuation">.</span>FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">UseConnectionString</span><span class="token punctuation">(</span>FreeSql<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>MySql<span class="token punctuation">,</span> <span class="token string">&quot;Data Source=127.0.0.1;Port=3306;User ID=root;Password=root;Initial Catalog=cccddd;Charset=utf8;SslMode=none;Max pool size=100&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">//\u7531\u4E8Enull\u4F1A\u9ED8\u8BA4\u8F93\u51FA\u65E5\u5FD7\u5230\u63A7\u5236\u53F0\uFF0C\u5F71\u54CD\u6D4B\u8BD5\u7ED3\u679C\u3002\u8FD9\u91CC\u4F20\u5165\u4E00\u4E2A\u7A7A\u7684\u65E5\u5FD7\u8F93\u51FA\u5BF9\u8C61</span>
    <span class="token punctuation">.</span><span class="token function">UseAutoSyncStructure</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token comment">//\u5173\u95ED\u81EA\u52A8\u8FC1\u79FB\u529F\u80FD</span>
    <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8BF7\u52A1\u5FC5\u5B9A\u4E49\u6210 Singleton \u5355\u4F8B\u6A21\u5F0F</span>

<span class="token keyword">class</span> <span class="token class-name">Song</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Title <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Url <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> Create_time <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> Is_deleted <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u65B9\u6CD5\uFF1A\u8FD0\u884C\u4E24\u6B21\uFF0C\u4EE5\u7B2C\u4E8C\u6B21\u6027\u80FD\u62A5\u544A\uFF0C\u907F\u514D\u4E86\u9996\u4E2A\u8FD0\u884C\u6162\u4E0D\u516C\u5E73\u7684\u60C5\u51B5\u3002</p><h3 id="\u6D4B\u8BD5\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5\u7ED3\u679C" aria-hidden="true">#</a> \u6D4B\u8BD5\u7ED3\u679C</h3><table><thead><tr><th></th><th>\u6570\u91CF</th><th>Query&lt;Class&gt;</th><th>Query&lt;Tuple&gt;</th><th>Query&lt;dynamic&gt;</th></tr></thead><tbody><tr><td>Dapper.Query(sql)</td><td>131072</td><td>623.4959ms</td><td>424.2411ms</td><td>644.8897ms</td></tr><tr><td>FreeSql.Query(sql)</td><td>131072</td><td>647.0552ms</td><td>577.3532ms</td><td>944.7454ms</td></tr><tr><td>FreeSql.ToList</td><td>131072</td><td>622.8980ms</td><td>435.3532ms</td><td>-</td></tr></tbody></table><p>FreeSql \u4EE5\u5FAE\u5C0F\u7684\u6027\u80FD\u5DEE\u8DDD\u8F93\u4E86\uFF0C\u539F\u56E0\u662F\u652F\u6301\u4E86\u66F4\u591A\u7684\u7C7B\u578B\uFF0C\u67D0\u4E9B\u7C7B\u578B\u89E3\u6790\u9700\u8981 Parse\u3001\u9012\u5F52\u6216\u5FAA\u73AF\u5904\u7406\u3002</p><blockquote><p>\u7531\u4E8E Dapper \u6CA1\u6709\u6279\u91CF\u63D2\u5165/\u66F4\u65B0/\u5220\u9664\u7684\u529F\u80FD\uFF0C\u5E76\u4E14\u90FD\u662F\u6267\u884C\u4E00\u6761 SQL \u547D\u4EE4\uFF0C\u6D4B\u8BD5\u7ED3\u679C\u6CA1\u6709\u610F\u4E49\u3002</p></blockquote><blockquote><p>FreeSql \u6279\u91CF\u63D2\u5165\u4F7F\u7528\u7684\u547D\u4EE4\uFF1AINSERT INTO Song (...) VALUES(...),VALUES(...),VALUES(...)...</p></blockquote><h3 id="\u6267\u884C-sql-\u8FD4\u56DE\u5B9E\u4F53\u5217\u8868-dapper-query-class-vs-freesql-query-class" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C-sql-\u8FD4\u56DE\u5B9E\u4F53\u5217\u8868-dapper-query-class-vs-freesql-query-class" aria-hidden="true">#</a> \u6267\u884C SQL \u8FD4\u56DE\u5B9E\u4F53\u5217\u8868 Dapper.Query&lt;Class&gt; VS FreeSql.Query&lt;Class&gt;</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Fact</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueryEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Stopwatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    time<span class="token punctuation">.</span><span class="token function">Restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List<span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span> dplist1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> conn <span class="token operator">=</span> g<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span>MasterPool<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dplist1 <span class="token operator">=</span> Dapper<span class="token punctuation">.</span>SqlMapper<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Query</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>conn<span class="token punctuation">.</span>Value<span class="token punctuation">,</span> <span class="token string">&quot;select * from song&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    time<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Elapsed: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">time<span class="token punctuation">.</span>Elapsed</span><span class="token punctuation">}</span></span><span class="token string">; Query Entity Counts: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">dplist1<span class="token punctuation">.</span>Count</span><span class="token punctuation">}</span></span><span class="token string">; ORM: Dapper&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    time<span class="token punctuation">.</span><span class="token function">Restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> t3 <span class="token operator">=</span> g<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Query</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;select * from song&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    time<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Elapsed: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">time<span class="token punctuation">.</span>Elapsed</span><span class="token punctuation">}</span></span><span class="token string">; Query Entity Counts: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">t3<span class="token punctuation">.</span>Count</span><span class="token punctuation">}</span></span><span class="token string">; ORM: FreeSql*&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6267\u884C-sql-\u8FD4\u56DE\u5143\u7EC4\u5217\u8868-dapper-query-tuple-vs-freesql-query-tuple" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C-sql-\u8FD4\u56DE\u5143\u7EC4\u5217\u8868-dapper-query-tuple-vs-freesql-query-tuple" aria-hidden="true">#</a> \u6267\u884C SQL \u8FD4\u56DE\u5143\u7EC4\u5217\u8868 Dapper.Query&lt;Tuple&gt; VS FreeSql.Query&lt;Tuple&gt;</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Fact</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueryTuple</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Stopwatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    time<span class="token punctuation">.</span><span class="token function">Restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span> dplist2 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> conn <span class="token operator">=</span> g<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span>MasterPool<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dplist2 <span class="token operator">=</span> Dapper<span class="token punctuation">.</span>SqlMapper<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Query</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>conn<span class="token punctuation">.</span>Value<span class="token punctuation">,</span> <span class="token string">&quot;select * from song&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    time<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Elapsed: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">time<span class="token punctuation">.</span>Elapsed</span><span class="token punctuation">}</span></span><span class="token string">; Query Tuple Counts: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">dplist2<span class="token punctuation">.</span>Count</span><span class="token punctuation">}</span></span><span class="token string">; ORM: Dapper&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    time<span class="token punctuation">.</span><span class="token function">Restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> t4 <span class="token operator">=</span> g<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Query</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;select * from song&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    time<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Elapsed: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">time<span class="token punctuation">.</span>Elapsed</span><span class="token punctuation">}</span></span><span class="token string">; Query Tuple Counts: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">t4<span class="token punctuation">.</span>Count</span><span class="token punctuation">}</span></span><span class="token string">; ORM: FreeSql*&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6267\u884C-sql-\u8FD4\u56DE-dynamic-\u5217\u8868-dapper-query-dynamic-vs-freesql-query-dynamic" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C-sql-\u8FD4\u56DE-dynamic-\u5217\u8868-dapper-query-dynamic-vs-freesql-query-dynamic" aria-hidden="true">#</a> \u6267\u884C SQL \u8FD4\u56DE dynamic \u5217\u8868 Dapper.Query&lt;dynamic&gt; VS FreeSql.Query&lt;dynamic&gt;</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Fact</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueryDynamic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Stopwatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    time<span class="token punctuation">.</span><span class="token function">Restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> dplist3 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> conn <span class="token operator">=</span> g<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span>MasterPool<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dplist3 <span class="token operator">=</span> Dapper<span class="token punctuation">.</span>SqlMapper<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Query</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>conn<span class="token punctuation">.</span>Value<span class="token punctuation">,</span> <span class="token string">&quot;select * from song&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    time<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Elapsed: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">time<span class="token punctuation">.</span>Elapsed</span><span class="token punctuation">}</span></span><span class="token string">; Query Dynamic Counts: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">dplist3<span class="token punctuation">.</span>Count</span><span class="token punctuation">}</span></span><span class="token string">; ORM: Dapper&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    time<span class="token punctuation">.</span><span class="token function">Restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> t5 <span class="token operator">=</span> g<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Query</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;select * from song&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    time<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Elapsed: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">time<span class="token punctuation">.</span>Elapsed</span><span class="token punctuation">}</span></span><span class="token string">; Query Dynamic Counts: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">t3<span class="token punctuation">.</span>Count</span><span class="token punctuation">}</span></span><span class="token string">; ORM: FreeSql*&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dapper-query-vs-freesql-tolist" tabindex="-1"><a class="header-anchor" href="#dapper-query-vs-freesql-tolist" aria-hidden="true">#</a> Dapper.Query VS FreeSql.ToList</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Fact</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Stopwatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    time<span class="token punctuation">.</span><span class="token function">Restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> t3 <span class="token operator">=</span> g<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    time<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Elapsed: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">time<span class="token punctuation">.</span>Elapsed</span><span class="token punctuation">}</span></span><span class="token string">; ToList Entity Counts: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">t3<span class="token punctuation">.</span>Count</span><span class="token punctuation">}</span></span><span class="token string">; ORM: FreeSql*&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    time<span class="token punctuation">.</span><span class="token function">Restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List<span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span> dplist1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> conn <span class="token operator">=</span> g<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span>MasterPool<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dplist1 <span class="token operator">=</span> Dapper<span class="token punctuation">.</span>SqlMapper<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Query</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>conn<span class="token punctuation">.</span>Value<span class="token punctuation">,</span> <span class="token string">&quot;select * from song&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    time<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Elapsed: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">time<span class="token punctuation">.</span>Elapsed</span><span class="token punctuation">}</span></span><span class="token string">; Query Entity Counts: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">dplist1<span class="token punctuation">.</span>Count</span><span class="token punctuation">}</span></span><span class="token string">; ORM: Dapper&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u66F4\u591A\u6D4B\u8BD5\u6E90\u7801\uFF1AFreeSql/FreeSql.Tests.PerformanceTests/MySqlAdoTest.cs</p></blockquote>`,30),o=[e];function c(l,u){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","performance.html.vue"]]);export{r as default};

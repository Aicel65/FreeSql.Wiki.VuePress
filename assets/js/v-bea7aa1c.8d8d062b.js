"use strict";(self.webpackChunkFreeSql_Wiki_VuePress=self.webpackChunkFreeSql_Wiki_VuePress||[]).push([[673],{6166:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-bea7aa1c",path:"/en/guide/With-Sql.html",title:"withsql",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"Return to DataTable with specified columns",slug:"return-to-datatable-with-specified-columns",children:[]},{level:3,title:"Return to DataTable with all columns",slug:"return-to-datatable-with-all-columns",children:[]},{level:3,title:"Return List<Tuple> (i.e. List<(string, string)>)",slug:"return-list-tuple-i-e-list-string-string",children:[]},{level:3,title:"Return List<object>",slug:"return-list-object",children:[]},{level:3,title:"Return List<object> and support paging",slug:"return-list-object-and-support-paging",children:[]},{level:3,title:"Return List<TestClassDto> and support paging",slug:"return-list-testclassdto-and-support-paging",children:[]},{level:2,title:"WithSql+ ToSQL = Union ALL",slug:"withsql-tosql-union-all",children:[{level:3,title:"Two-Stage ISelect Query: Use WithSql Multiple Times to Convert to UNION ALL Query",slug:"two-stage-iselect-query-use-withsql-multiple-times-to-convert-to-union-all-query",children:[]},{level:3,title:"Cross Sub-Table Query: Wse AsTable for the Same Entity Multiple Times to Convert to UNION ALL Query",slug:"cross-sub-table-query-wse-astable-for-the-same-entity-multiple-times-to-convert-to-union-all-query",children:[]},{level:3,title:"Use ToSql to Splice New SQL Statements, And Use IAdo to Execute",slug:"use-tosql-to-splice-new-sql-statements-and-use-iado-to-execute",children:[]}]},{level:2,title:"Paging Problem",slug:"paging-problem",children:[{level:3,title:"Solution: Call WithSql Multiple Times",slug:"solution-call-withsql-multiple-times",children:[]}]}],git:{updatedTime:1651391208e3,contributors:[{name:"luoyunchong",email:"luoyunchong@foxmai.com",commits:1}]},filePathRelative:"en/guide/With-Sql.md"}},6723:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(6252).uE)('<h1 id="withsql" tabindex="-1"><a class="header-anchor" href="#withsql" aria-hidden="true">#</a> withsql</h1><h1 id="use-custom-sql-statements" tabindex="-1"><a class="header-anchor" href="#use-custom-sql-statements" aria-hidden="true">#</a> Use Custom SQL Statements</h1><p>Define entity class:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestClass</span>\n    <span class="token punctuation">{</span>\n        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;ID&quot;</span><span class="token punctuation">,</span> IsPrimary <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> No <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> Age <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;BIRTH_DAY&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> Birthday <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span></span> Point <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name">Sex<span class="token punctuation">?</span></span> Sex <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Sex</span>\n    <span class="token punctuation">{</span>\n        Boy<span class="token punctuation">,</span>\n        Girl\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestClssDto</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ID <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n\n        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> Age <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n\n        <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> Birthday <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>Different query results:</p><ul><li>Return to <code>DataTable</code>.</li><li>Return <code>List&lt;Tuplue&gt;</code> i.e. <code>List&lt;(string,string)&gt;</code> tuple.</li><li>Return <code>List&lt;object&gt;</code> and support paging.</li><li>Return <code>List&lt;TestClassDto&gt;</code> and support paging.</li></ul><h3 id="return-to-datatable-with-specified-columns" tabindex="-1"><a class="header-anchor" href="#return-to-datatable-with-specified-columns" aria-hidden="true">#</a> Return to DataTable with specified columns</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name">DataTable</span> dt1 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">ToDataTable</span><span class="token punctuation">(</span><span class="token string">&quot;ID,Age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ID<span class="token punctuation">,</span>Age \n\t<span class="token keyword">FROM</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass  <span class="token punctuation">)</span> a\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="return-to-datatable-with-all-columns" tabindex="-1"><a class="header-anchor" href="#return-to-datatable-with-all-columns" aria-hidden="true">#</a> Return to DataTable with all columns</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name">DataTable</span> dt2 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">ToDataTable</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> \n<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass  <span class="token punctuation">)</span> a\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="return-list-tuple-i-e-list-string-string" tabindex="-1"><a class="header-anchor" href="#return-list-tuple-i-e-list-string-string" aria-hidden="true">#</a> Return List&lt;Tuple&gt; (i.e. List&lt;(string, string)&gt;)</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> _fsql\n    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;ID,Age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ID<span class="token punctuation">,</span> Age\n\t<span class="token keyword">FROM</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass  <span class="token punctuation">)</span> a\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="return-list-object" tabindex="-1"><a class="header-anchor" href="#return-list-object" aria-hidden="true">#</a> Return List&lt;object&gt;</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> list2 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span>\n\t<span class="token keyword">FROM</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass  <span class="token punctuation">)</span> a\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="return-list-object-and-support-paging" tabindex="-1"><a class="header-anchor" href="#return-list-object-and-support-paging" aria-hidden="true">#</a> Return List&lt;object&gt; and support paging</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>  <span class="token class-name"><span class="token keyword">var</span></span> list3 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WhereIf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;1=1&quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span><span class="token string">&quot;ID DESC&quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;ID,Age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ID<span class="token punctuation">,</span> Age\n\t<span class="token keyword">FROM</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass  <span class="token punctuation">)</span> a\n\t<span class="token keyword">WHERE</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>\n\t<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ID <span class="token keyword">DESC</span>\n\t<span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="return-list-testclassdto-and-support-paging" tabindex="-1"><a class="header-anchor" href="#return-list-testclassdto-and-support-paging" aria-hidden="true">#</a> Return List&lt;TestClassDto&gt; and support paging</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> list4 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WhereIf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;1=1&quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span><span class="token string">&quot;ID DESC&quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TestClssDto<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;ID,Age,BIRTH_DAY as Birthday&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ID<span class="token punctuation">,</span> Age<span class="token punctuation">,</span>BIRTH_DAY <span class="token keyword">as</span> Birthday\n\t<span class="token keyword">FROM</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass  <span class="token punctuation">)</span> a\n\t<span class="token keyword">WHERE</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>\n\t<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ID <span class="token keyword">DESC</span>\n\t<span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="withsql-tosql-union-all" tabindex="-1"><a class="header-anchor" href="#withsql-tosql-union-all" aria-hidden="true">#</a> WithSql+ ToSQL = Union ALL</h2><h3 id="two-stage-iselect-query-use-withsql-multiple-times-to-convert-to-union-all-query" tabindex="-1"><a class="header-anchor" href="#two-stage-iselect-query-use-withsql-multiple-times-to-convert-to-union-all-query" aria-hidden="true">#</a> Two-Stage ISelect Query: Use WithSql Multiple Times to Convert to UNION ALL Query</h3><p>After using <code>WithSql</code> multiple times, a query statement based on <code>UNION ALL</code> will be generated. So we can use <code>ISelect.ToSql(FieldAliasOptions.AsProperty)</code> to get the generated SQL as follows:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> sql1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name"><span class="token keyword">var</span></span> sql2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;yyy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nfsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql1<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql2<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n    <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>tb_topic<span class="token punctuation">`</span></span> a \n    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%xxx%&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb\n \n<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>\n \n<span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n    <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>tb_topic<span class="token punctuation">`</span></span> a \n    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%yyy%&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="cross-sub-table-query-wse-astable-for-the-same-entity-multiple-times-to-convert-to-union-all-query" tabindex="-1"><a class="header-anchor" href="#cross-sub-table-query-wse-astable-for-the-same-entity-multiple-times-to-convert-to-union-all-query" aria-hidden="true">#</a> Cross Sub-Table Query: Wse AsTable for the Same Entity Multiple Times to Convert to UNION ALL Query</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>var sql <span class="token operator">=</span> fsql<span class="token punctuation">.</span>Select<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> oldname<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;table_1&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> oldname<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;table_2&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span>a <span class="token operator">=</span><span class="token operator">&gt;</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token string">&quot;Id&quot;</span> as1 <span class="token keyword">FROM</span> <span class="token string">&quot;table_1&quot;</span> a<span class="token punctuation">)</span> ftb \n<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token string">&quot;Id&quot;</span> as1 <span class="token keyword">FROM</span> <span class="token string">&quot;table_2&quot;</span> a<span class="token punctuation">)</span> ftb \n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="use-tosql-to-splice-new-sql-statements-and-use-iado-to-execute" tabindex="-1"><a class="header-anchor" href="#use-tosql-to-splice-new-sql-statements-and-use-iado-to-execute" aria-hidden="true">#</a> Use ToSql to Splice New SQL Statements, And Use IAdo to Execute</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>var sql1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span>Select<span class="token operator">&lt;</span>Topic<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=</span><span class="token operator">&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&gt;</span> <span class="token number">100</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&lt;</span> <span class="token number">200</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span>a <span class="token operator">=</span><span class="token operator">&gt;</span> new <span class="token punctuation">{</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>Title <span class="token punctuation">}</span><span class="token punctuation">,</span> FieldAliasOptions<span class="token punctuation">.</span>AsProperty<span class="token punctuation">)</span><span class="token punctuation">;</span>\nvar sql2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span>Select<span class="token operator">&lt;</span>Topic<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=</span><span class="token operator">&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&gt;</span> <span class="token number">1001</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&lt;</span> <span class="token number">1200</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span>a <span class="token operator">=</span><span class="token operator">&gt;</span> new <span class="token punctuation">{</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>Title <span class="token punctuation">}</span><span class="token punctuation">,</span> FieldAliasOptions<span class="token punctuation">.</span>AsProperty<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nfsql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token function">CommandFluent</span><span class="token punctuation">(</span>$<span class="token string">&quot;{sql1} UNION ALL {sql2}&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ExecuteDataTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="paging-problem" tabindex="-1"><a class="header-anchor" href="#paging-problem" aria-hidden="true">#</a> Paging Problem</h2><p>After using <code>UNION ALL</code>, there will be a problem if you paginate directly. Please see the specific example:</p><p>There is a problem with using WithSql + Page multiple times: There is a paging statement in each WithSql</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> sql1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name"><span class="token keyword">var</span></span> sql2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;yyy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nfsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code> <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n    <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>tb_topic<span class="token punctuation">`</span></span> a \n    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%xxx%&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> a \n<span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span> ftb\n \n<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>\n \n<span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n    <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>tb_topic<span class="token punctuation">`</span></span> a \n    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%yyy%&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> a \n<span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span> ftb\n\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>After multiple Sql statements are combined with WithSql (and a <code>UNION ALL</code> statement is generated), if you directly use the <code>Page</code> method for paging, it will cause a paging statement to be generated in each sub-table.</p><p><code>WithSql</code> can realize the function of sub-table with <code>AsTable</code>. When querying across sub-tables, paging will take effect in each sub-table (that is, each SQL paging in WithSql).</p><h3 id="solution-call-withsql-multiple-times" tabindex="-1"><a class="header-anchor" href="#solution-call-withsql-multiple-times" aria-hidden="true">#</a> Solution: Call WithSql Multiple Times</h3><p>Call WithSql multiple times. If you need to paging, you need to follow the two steps below.</p><ul><li>Step 1: combine the two Sql statements into one by <code>WithSql</code>:</li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code> <span class="token class-name"><span class="token keyword">var</span></span> sql <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM tb_topic where id &gt; 11&quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM tb_topic where id &lt; 10&quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>The above code will be generated as a Sql statement using <code>UNION ALL</code>:</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code> <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> \n         <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_topic <span class="token keyword">where</span> id <span class="token operator">&gt;</span> <span class="token number">11</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb\n\n         <span class="token keyword">UNION</span> <span class="token keyword">ALL</span>\n\n         <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> \n         <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_topic <span class="token keyword">where</span> id <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>Step 2: on the basis of the SQL statement containing <code>UNION ALL</code>, page by calling the <code>Page</code> method:</li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code> <span class="token class-name"><span class="token keyword">var</span></span> sql2 <span class="token operator">=</span> g<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span>\n\t <span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>\n\t <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span>\n<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>\n    <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_topic <span class="token keyword">where</span> id <span class="token operator">&gt;</span> <span class="token number">11</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb\n\n    <span class="token keyword">UNION</span> <span class="token keyword">ALL</span>\n\n    <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>\n    <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_topic <span class="token keyword">where</span> id <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb <span class="token punctuation">)</span> a \n<span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',50),p={},e=(0,a(3744).Z)(p,[["render",function(n,s){return t}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);
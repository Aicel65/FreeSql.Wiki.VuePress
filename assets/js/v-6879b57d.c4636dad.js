"use strict";(self.webpackChunkFreeSql_Wiki_VuePress=self.webpackChunkFreeSql_Wiki_VuePress||[]).push([[2952],{8208:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-6879b57d",path:"/guide/withsql.html",title:"WithSql",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"WithSql自定义SQL",slug:"withsql自定义sql",children:[{level:3,title:"1.返回DataTable",slug:"_1-返回datatable",children:[]},{level:3,title:"2.返回DataTable",slug:"_2-返回datatable",children:[]},{level:3,title:"3.返回List<Tuplue> 即List<(string,string)> 元组",slug:"_3-返回list-tuplue-即list-string-string-元组",children:[]},{level:3,title:"4.返回List<object>",slug:"_4-返回list-object",children:[]},{level:3,title:"5.返回List<object> 且能支持分页",slug:"_5-返回list-object-且能支持分页",children:[]},{level:3,title:"6.返回List<TestClassDto>且能支持分页",slug:"_6-返回list-testclassdto-且能支持分页",children:[]}]},{level:2,title:"通过 WithSql+ ToSQL实现 Union ALL 查询方法",slug:"通过-withsql-tosql实现-union-all-查询方法",children:[{level:3,title:"1、二次 ISelect 查询：WithSql 使用多次，等于 UNION ALL 查询",slug:"_1、二次-iselect-查询-withsql-使用多次-等于-union-all-查询",children:[]},{level:3,title:"2、跨分表查询：AsTable 相同实体多次操作，等于 Union ALL 查询",slug:"_2、跨分表查询-astable-相同实体多次操作-等于-union-all-查询",children:[]},{level:3,title:"3、利用 ToSql 拼接新的 SQL，使用 IAdo 执行",slug:"_3、利用-tosql-拼接新的-sql-使用-iado-执行",children:[]}]},{level:2,title:"分页问题",slug:"分页问题",children:[{level:3,title:"多次WithSql+Page存在问题：每个WithSql内都有一个Page分页",slug:"多次withsql-page存在问题-每个withsql内都有一个page分页",children:[]}]},{level:2,title:"解决方案",slug:"解决方案",children:[{level:3,title:"多次withsql，如需分页，需要按下面的二步操作",slug:"多次withsql-如需分页-需要按下面的二步操作",children:[]}]}],git:{updatedTime:1643287138e3,contributors:[{name:"IGeekFan",email:"luoyunchong@foxmail.com",commits:1}]},filePathRelative:"guide/withsql.md"}},2880:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="withsql" tabindex="-1"><a class="header-anchor" href="#withsql" aria-hidden="true">#</a> WithSql</h1><h2 id="withsql自定义sql" tabindex="-1"><a class="header-anchor" href="#withsql自定义sql" aria-hidden="true">#</a> WithSql自定义SQL</h2><p>定义实体类</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestClass</span>\n    <span class="token punctuation">{</span>\n        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;ID&quot;</span><span class="token punctuation">,</span> IsPrimary <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> No <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> Age <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;BIRTH_DAY&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> Birthday <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span></span> Point <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name">Sex<span class="token punctuation">?</span></span> Sex <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Sex</span>\n    <span class="token punctuation">{</span>\n        Boy<span class="token punctuation">,</span>\n        Girl\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestClssDto</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ID <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n\n        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> Age <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n\n        <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> Birthday <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>不同的查询方式。</p><ul><li>返回<code>DataTable</code></li><li>返回<code>List&lt;Tuplue&gt;</code> 即<code>List&lt;(string,string)&gt;</code>元组</li><li>返回<code>List&lt;object&gt;</code> 且能支持分页</li><li>返回<code>List&lt;TestClassDto&gt;</code>且能支持分页</li></ul><h3 id="_1-返回datatable" tabindex="-1"><a class="header-anchor" href="#_1-返回datatable" aria-hidden="true">#</a> 1.返回DataTable</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name">DataTable</span> dt1 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">ToDataTable</span><span class="token punctuation">(</span><span class="token string">&quot;ID,Age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ID<span class="token punctuation">,</span>Age \n\t<span class="token keyword">FROM</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass  <span class="token punctuation">)</span> a\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_2-返回datatable" tabindex="-1"><a class="header-anchor" href="#_2-返回datatable" aria-hidden="true">#</a> 2.返回DataTable</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name">DataTable</span> dt2 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">ToDataTable</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> \n<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass  <span class="token punctuation">)</span> a\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_3-返回list-tuplue-即list-string-string-元组" tabindex="-1"><a class="header-anchor" href="#_3-返回list-tuplue-即list-string-string-元组" aria-hidden="true">#</a> 3.返回<code>List&lt;Tuplue&gt;</code> 即<code>List&lt;(string,string)&gt;</code> 元组</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> _fsql\n    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;ID,Age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ID<span class="token punctuation">,</span> Age\n\t<span class="token keyword">FROM</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass  <span class="token punctuation">)</span> a\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_4-返回list-object" tabindex="-1"><a class="header-anchor" href="#_4-返回list-object" aria-hidden="true">#</a> 4.返回<code>List&lt;object&gt;</code></h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> list2 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span>\n\t<span class="token keyword">FROM</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass  <span class="token punctuation">)</span> a\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_5-返回list-object-且能支持分页" tabindex="-1"><a class="header-anchor" href="#_5-返回list-object-且能支持分页" aria-hidden="true">#</a> 5.返回<code>List&lt;object&gt;</code> 且能支持分页</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>  <span class="token class-name"><span class="token keyword">var</span></span> list3 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WhereIf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;1=1&quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span><span class="token string">&quot;ID DESC&quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;ID,Age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ID<span class="token punctuation">,</span> Age\n\t<span class="token keyword">FROM</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass  <span class="token punctuation">)</span> a\n\t<span class="token keyword">WHERE</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>\n\t<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ID <span class="token keyword">DESC</span>\n\t<span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_6-返回list-testclassdto-且能支持分页" tabindex="-1"><a class="header-anchor" href="#_6-返回list-testclassdto-且能支持分页" aria-hidden="true">#</a> 6.返回<code>List&lt;TestClassDto&gt;</code>且能支持分页</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> list4 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WhereIf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;1=1&quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span><span class="token string">&quot;ID DESC&quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TestClssDto<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;ID,Age,BIRTH_DAY as Birthday&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ID<span class="token punctuation">,</span> Age<span class="token punctuation">,</span>BIRTH_DAY <span class="token keyword">as</span> Birthday\n\t<span class="token keyword">FROM</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass  <span class="token punctuation">)</span> a\n\t<span class="token keyword">WHERE</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>\n\t<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ID <span class="token keyword">DESC</span>\n\t<span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="通过-withsql-tosql实现-union-all-查询方法" tabindex="-1"><a class="header-anchor" href="#通过-withsql-tosql实现-union-all-查询方法" aria-hidden="true">#</a> 通过 WithSql+ ToSQL实现 Union ALL 查询方法</h2><h3 id="_1、二次-iselect-查询-withsql-使用多次-等于-union-all-查询" tabindex="-1"><a class="header-anchor" href="#_1、二次-iselect-查询-withsql-使用多次-等于-union-all-查询" aria-hidden="true">#</a> 1、二次 ISelect 查询：WithSql 使用多次，等于 UNION ALL 查询</h3><p>WithSql 使用多次为 UNION ALL 查询，所以我们可以利用 ISelect.ToSql(FieldAliasOptions.AsProperty) 得到生成的 SQL，如下：</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> sql1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name"><span class="token keyword">var</span></span> sql2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;yyy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nfsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql1<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql2<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n    <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>tb_topic<span class="token punctuation">`</span></span> a \n    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%xxx%&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb\n \n<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>\n \n<span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n    <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>tb_topic<span class="token punctuation">`</span></span> a \n    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%yyy%&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_2、跨分表查询-astable-相同实体多次操作-等于-union-all-查询" tabindex="-1"><a class="header-anchor" href="#_2、跨分表查询-astable-相同实体多次操作-等于-union-all-查询" aria-hidden="true">#</a> 2、跨分表查询：AsTable 相同实体多次操作，等于 Union ALL 查询</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>var sql <span class="token operator">=</span> fsql<span class="token punctuation">.</span>Select<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> oldname<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;table_1&quot;</span><span class="token punctuation">)</span>a\n    <span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> oldname<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;table_2&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span>a <span class="token operator">=</span><span class="token operator">&gt;</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token string">&quot;Id&quot;</span> as1 <span class="token keyword">FROM</span> <span class="token string">&quot;table_1&quot;</span> a<span class="token punctuation">)</span> ftb \n<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token string">&quot;Id&quot;</span> as1 <span class="token keyword">FROM</span> <span class="token string">&quot;table_2&quot;</span> a<span class="token punctuation">)</span> ftb \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_3、利用-tosql-拼接新的-sql-使用-iado-执行" tabindex="-1"><a class="header-anchor" href="#_3、利用-tosql-拼接新的-sql-使用-iado-执行" aria-hidden="true">#</a> 3、利用 ToSql 拼接新的 SQL，使用 IAdo 执行</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>var sql1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span>Select<span class="token operator">&lt;</span>Topic<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=</span><span class="token operator">&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&gt;</span> <span class="token number">100</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&lt;</span> <span class="token number">200</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span>a <span class="token operator">=</span><span class="token operator">&gt;</span> new <span class="token punctuation">{</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>Title <span class="token punctuation">}</span><span class="token punctuation">,</span> FieldAliasOptions<span class="token punctuation">.</span>AsProperty<span class="token punctuation">)</span><span class="token punctuation">;</span>\nvar sql2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span>Select<span class="token operator">&lt;</span>Topic<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=</span><span class="token operator">&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&gt;</span> <span class="token number">1001</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&lt;</span> <span class="token number">1200</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span>a <span class="token operator">=</span><span class="token operator">&gt;</span> new <span class="token punctuation">{</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>Title <span class="token punctuation">}</span><span class="token punctuation">,</span> FieldAliasOptions<span class="token punctuation">.</span>AsProperty<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nfsql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token function">CommandFluent</span><span class="token punctuation">(</span>$<span class="token string">&quot;{sql1} UNION ALL {sql2}&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ExecuteDataTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="分页问题" tabindex="-1"><a class="header-anchor" href="#分页问题" aria-hidden="true">#</a> 分页问题</h2><p>Union All 之后 如果直接 分页会有一个问题。请看具体示例</p><h3 id="多次withsql-page存在问题-每个withsql内都有一个page分页" tabindex="-1"><a class="header-anchor" href="#多次withsql-page存在问题-每个withsql内都有一个page分页" aria-hidden="true">#</a> 多次WithSql+Page存在问题：每个WithSql内都有一个Page分页</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> sql1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name"><span class="token keyword">var</span></span> sql2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;yyy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nfsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code> <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n    <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>tb_topic<span class="token punctuation">`</span></span> a \n    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%xxx%&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> a \n<span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span> ftb\n \n<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>\n \n<span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span> \n    <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>tb_topic<span class="token punctuation">`</span></span> a \n    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%yyy%&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> a \n<span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span> ftb\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>多个sql union all使用withsql，直接Page分页，会导致每个子表都生效，子表都生成分页。</p><p>WithSql 可以和 AsTable 实现分表的功能。</p><p>分表跨表查询的时候，分页是要向每个子表（即每个WithSql中的SQL分页）都生效。</p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h2><h3 id="多次withsql-如需分页-需要按下面的二步操作" tabindex="-1"><a class="header-anchor" href="#多次withsql-如需分页-需要按下面的二步操作" aria-hidden="true">#</a> 多次withsql，如需分页，需要按下面的二步操作</h3><ul><li>第一步：通过witsql，将二个sql组成一个sql。</li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code> <span class="token class-name"><span class="token keyword">var</span></span> sql <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM tb_topic where id &gt; 11&quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM tb_topic where id &lt; 10&quot;</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>如上生成的UOION ALL的sql</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code> <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> \n         <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_topic <span class="token keyword">where</span> id <span class="token operator">&gt;</span> <span class="token number">11</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb\n\n         <span class="token keyword">UNION</span> <span class="token keyword">ALL</span>\n\n         <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> \n         <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_topic <span class="token keyword">where</span> id <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>第二步：之后 调用Page则是通过Union ALL后的结果上分页</li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code> <span class="token class-name"><span class="token keyword">var</span></span> sql2 <span class="token operator">=</span> g<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span>\n\t <span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>\n\t <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Clicks<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>TypeGuid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>Title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>CreateTime<span class="token punctuation">`</span></span>\n<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>\n    <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_topic <span class="token keyword">where</span> id <span class="token operator">&gt;</span> <span class="token number">11</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb\n\n    <span class="token keyword">UNION</span> <span class="token keyword">ALL</span>\n\n    <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>\n    <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_topic <span class="token keyword">where</span> id <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb <span class="token punctuation">)</span> a \n<span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',51),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);
"use strict";(self.webpackChunkFreeSql_Wiki_VuePress=self.webpackChunkFreeSql_Wiki_VuePress||[]).push([[3471],{1693:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-3bb27ea9",path:"/guide/sharding.html",title:"分表分库",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"理论知识",slug:"理论知识",children:[]},{level:2,title:"分表 AsTable",slug:"分表-astable",children:[]},{level:2,title:"【分库】利用 IdleBus 重写 IFreeSql",slug:"【分库】利用-idlebus-重写-ifreesql",children:[]}],git:{updatedTime:1651030409e3,contributors:[{name:"luoyunchong",email:"luoyunchong@foxmai.com",commits:1}]},filePathRelative:"guide/sharding.md"}},9978:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="分表分库" tabindex="-1"><a class="header-anchor" href="#分表分库" aria-hidden="true">#</a> 分表分库</h1><h2 id="理论知识" tabindex="-1"><a class="header-anchor" href="#理论知识" aria-hidden="true">#</a> 理论知识</h2><p>分表 - 从表面意思上看呢，就是把一张表分成N多个小表，每一个小表都是完正的一张表。分表后数据都是存放在分表里，总表只是一个外壳，存取数据发生在一个一个的分表里面。分表后单表的并发能力提高了，磁盘I/O性能也提高了。并发能力为什么提高了呢，因为查寻一次所花的时间变短了，如果出现高并发的话，总表可以根据不同 的查询，将并发压力分到不同的小表里面。</p><p>分库 - 把原本存储于一个库的数据分块存储到多个库上，把原本存储于一个表的数据分块存储到多个表上。数据库中的数据量不一定是可控的，在未进行分表分库的情况下，随着时间和业务的发展，库中的表会越来越多，表中的数据量也会越来越大，相应地，数据操作，增删改查的开销也会越来越大；另外，一台服务器的资源（CPU、磁盘、内存、IO等）是有限的，最终数据库所能承载的数据量、数据处理能力都将遭遇瓶颈。</p><h2 id="分表-astable" tabindex="-1"><a class="header-anchor" href="#分表-astable" aria-hidden="true">#</a> 分表 AsTable</h2><p>FreeSql 原生用法、FreeSql.Repository 仓储用法 都提供了 AsTable 方法对分表进行 CRUD 操作，例如：</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>var repo <span class="token operator">=</span> fsql<span class="token punctuation">.</span>GetRepository<span class="token operator">&lt;</span>Log<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nrepo<span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span>oldname <span class="token operator">=</span><span class="token operator">&gt;</span> $<span class="token string">&quot;{oldname}_201903&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//对 Log_201903 表 CRUD</span>\n\nrepo<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>new Log <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>跨库，但是在同一个数据库服务器下，也可以使用 AsTable(oldname =&gt; $&quot;db2.dbo.{oldname}&quot;)</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">//跨表查询</span>\n<span class="token class-name"><span class="token keyword">var</span></span> sql <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> oldname<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;table_1&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> oldname<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;table_2&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//select * from (SELECT a.&quot;Id&quot; as1 FROM &quot;table_1&quot; a) ftb </span>\n<span class="token comment">//UNION ALL</span>\n<span class="token comment">//select * from (SELECT a.&quot;Id&quot; as1 FROM &quot;table_2&quot; a) ftb </span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>分表总结：</p><ul><li>分表、相同服务器跨库 可以使用 AsTable 进行 CRUD；</li><li>AsTable CodeFirst 会自动创建不存在的分表；</li><li>不可在分表分库的实体类型中使用《延时加载》；</li></ul><p>SqlServer 跨库事务 可以使用 TransactionScope，如下：</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> repoLog <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRepository</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Log<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name"><span class="token keyword">var</span></span> repoComment <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRepository</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Comment<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nrepoLog<span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span>oldname <span class="token operator">=&gt;</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token number">201903</span></span><span class="token punctuation">}</span></span><span class="token string">.dbo.</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">oldname</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nrepoComment<span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span>oldname <span class="token operator">=&gt;</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token number">201903</span></span><span class="token punctuation">}</span></span><span class="token string">.dbo.</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">oldname</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">TransactionScope</span> ts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TransactionScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    repoComment<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Comment</span> <span class="token punctuation">{</span> <span class="token range operator">..</span><span class="token punctuation">.</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    repoLog<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Log</span> <span class="token punctuation">{</span> <span class="token range operator">..</span><span class="token punctuation">.</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    ts<span class="token punctuation">.</span><span class="token function">Complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>分布式数据库 TCC/SAGA 方案请移步：https://github.com/2881099/FreeSql.Cloud</p><blockquote><p>v3.2.500 自动分表方案：https://github.com/dotnetcore/FreeSql/discussions/1066</p></blockquote><hr><h2 id="【分库】利用-idlebus-重写-ifreesql" tabindex="-1"><a class="header-anchor" href="#【分库】利用-idlebus-重写-ifreesql" aria-hidden="true">#</a> 【分库】利用 IdleBus 重写 IFreeSql</h2><p>在 asp.net core 利用 IdleBus 重写 IFreeSql 支持多库操作</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PackageReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FreeSql<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3.2.500<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PackageReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IdleBus<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1.5.2<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>1、定义和注入</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>var fsql <span class="token operator">=</span> new <span class="token function">MultiFreeSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfsql<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token string">&quot;db1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> new <span class="token function">FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UseConnectionString</span><span class="token punctuation">(</span>DataType<span class="token punctuation">.</span>MySql<span class="token punctuation">,</span> <span class="token string">&quot;str1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfsql<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token string">&quot;db2&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> new <span class="token function">FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UseConnectionString</span><span class="token punctuation">(</span>DataType<span class="token punctuation">.</span>MySql<span class="token punctuation">,</span> <span class="token string">&quot;str2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfsql<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token string">&quot;db3&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> new <span class="token function">FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UseConnectionString</span><span class="token punctuation">(</span>DataType<span class="token punctuation">.</span>SqlServer<span class="token punctuation">,</span> <span class="token string">&quot;str3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nservices<span class="token punctuation">.</span>AddSingleton<span class="token operator">&lt;</span>IFreeSql<span class="token operator">&gt;</span><span class="token punctuation">(</span>fsql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>2、如何使用</p><blockquote><p>额外增加 Register/Change 两个方法，其他跟 IFreeSql 用法几乎一样</p></blockquote><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>var db1_list <span class="token operator">=</span> fsql<span class="token punctuation">.</span>Select<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//切换 db2 数据库，一旦切换之后 fsql 操作都是针对 db2</span>\nfsql<span class="token punctuation">.</span><span class="token function">Change</span><span class="token punctuation">(</span><span class="token string">&quot;db2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nvar db2_list <span class="token operator">=</span> fsql<span class="token punctuation">.</span>Select<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//这样也行</span>\nvar db2_list <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token function">Change</span><span class="token punctuation">(</span><span class="token string">&quot;db2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Select<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>如果需要分布多事务 TCC/Saga 请移步到：https://github.com/2881099/FreeSql.Cloud</p></blockquote><p>3、MultiFreeSql.cs 代码定义</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>using FreeSql<span class="token punctuation">;</span>\nusing FreeSql<span class="token punctuation">.</span>Internal<span class="token punctuation">;</span>\nusing FreeSql<span class="token punctuation">.</span>Internal<span class="token punctuation">.</span>CommonProvider<span class="token punctuation">;</span>\nusing System<span class="token punctuation">;</span>\nusing System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic<span class="token punctuation">;</span>\nusing System<span class="token punctuation">.</span>Linq<span class="token punctuation">;</span>\nusing System<span class="token punctuation">.</span>Threading<span class="token punctuation">;</span>\n\nnamespace net50_webapi_idlebus\n<span class="token punctuation">{</span>\n    public class MultiFreeSql <span class="token operator">:</span> MultiFreeSql<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>\n\n    public partial class MultiFreeSql<span class="token operator">&lt;</span>TDBKey<span class="token operator">&gt;</span> <span class="token operator">:</span> BaseDbProvider<span class="token punctuation">,</span> IFreeSql\n    <span class="token punctuation">{</span>\n        internal TDBKey _dbkeyMaster<span class="token punctuation">;</span>\n        internal AsyncLocal<span class="token operator">&lt;</span>TDBKey<span class="token operator">&gt;</span> _dbkeyCurrent <span class="token operator">=</span> new AsyncLocal<span class="token operator">&lt;</span>TDBKey<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        BaseDbProvider _ormMaster <span class="token operator">=</span><span class="token operator">&gt;</span> _ib<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>_dbkeyMaster<span class="token punctuation">)</span> as BaseDbProvider<span class="token punctuation">;</span>\n        BaseDbProvider _ormCurrent <span class="token operator">=</span><span class="token operator">&gt;</span> _ib<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">Equals</span><span class="token punctuation">(</span>_dbkeyCurrent<span class="token punctuation">.</span>Value<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token punctuation">(</span>TDBKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> _dbkeyMaster <span class="token operator">:</span> _dbkeyCurrent<span class="token punctuation">.</span>Value<span class="token punctuation">)</span> as BaseDbProvider<span class="token punctuation">;</span>\n        internal IdleBus<span class="token operator">&lt;</span>TDBKey<span class="token punctuation">,</span> IFreeSql<span class="token operator">&gt;</span> _ib<span class="token punctuation">;</span>\n\n        public <span class="token function">MultiFreeSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            _ib <span class="token operator">=</span> new IdleBus<span class="token operator">&lt;</span>TDBKey<span class="token punctuation">,</span> IFreeSql<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            _ib<span class="token punctuation">.</span>Notice <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> __<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        public override IAdo Ado <span class="token operator">=</span><span class="token operator">&gt;</span> _ormCurrent<span class="token punctuation">.</span>Ado<span class="token punctuation">;</span>\n        public override IAop Aop <span class="token operator">=</span><span class="token operator">&gt;</span> _ormCurrent<span class="token punctuation">.</span>Aop<span class="token punctuation">;</span>\n        public override ICodeFirst CodeFirst <span class="token operator">=</span><span class="token operator">&gt;</span> _ormCurrent<span class="token punctuation">.</span>CodeFirst<span class="token punctuation">;</span>\n        public override IDbFirst DbFirst <span class="token operator">=</span><span class="token operator">&gt;</span> _ormCurrent<span class="token punctuation">.</span>DbFirst<span class="token punctuation">;</span>\n        public override GlobalFilter GlobalFilter <span class="token operator">=</span><span class="token operator">&gt;</span> _ormCurrent<span class="token punctuation">.</span>GlobalFilter<span class="token punctuation">;</span>\n        public override <span class="token keyword">void</span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> _ib<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        public override CommonExpression InternalCommonExpression <span class="token operator">=</span><span class="token operator">&gt;</span> _ormCurrent<span class="token punctuation">.</span>InternalCommonExpression<span class="token punctuation">;</span>\n        public override CommonUtils InternalCommonUtils <span class="token operator">=</span><span class="token operator">&gt;</span> _ormCurrent<span class="token punctuation">.</span>InternalCommonUtils<span class="token punctuation">;</span>\n\n        public override ISelect<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span> CreateSelectProvider<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span><span class="token punctuation">(</span>object dywhere<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> _ormCurrent<span class="token punctuation">.</span>CreateSelectProvider<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span><span class="token punctuation">(</span>dywhere<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        public override IDelete<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span> CreateDeleteProvider<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span><span class="token punctuation">(</span>object dywhere<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> _ormCurrent<span class="token punctuation">.</span>CreateDeleteProvider<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span><span class="token punctuation">(</span>dywhere<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        public override IUpdate<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span> CreateUpdateProvider<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span><span class="token punctuation">(</span>object dywhere<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> _ormCurrent<span class="token punctuation">.</span>CreateUpdateProvider<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span><span class="token punctuation">(</span>dywhere<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        public override IInsert<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span> CreateInsertProvider<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> _ormCurrent<span class="token punctuation">.</span>CreateInsertProvider<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        public override IInsertOrUpdate<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span> CreateInsertOrUpdateProvider<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> _ormCurrent<span class="token punctuation">.</span>CreateInsertOrUpdateProvider<span class="token operator">&lt;</span>T1<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    public <span class="token keyword">static</span> class MultiFreeSqlExtensions\n    <span class="token punctuation">{</span>\n        public <span class="token keyword">static</span> IFreeSql Change<span class="token operator">&lt;</span>TDBKey<span class="token operator">&gt;</span><span class="token punctuation">(</span>this IFreeSql fsql<span class="token punctuation">,</span> TDBKey dbkey<span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            var multiFsql <span class="token operator">=</span> fsql as MultiFreeSql<span class="token operator">&lt;</span>TDBKey<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>multiFsql <span class="token operator">==</span> null<span class="token punctuation">)</span> throw new <span class="token function">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;fsql 类型不是 MultiFreeSql&lt;TDBKey&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            multiFsql<span class="token punctuation">.</span>_dbkeyCurrent<span class="token punctuation">.</span>Value <span class="token operator">=</span> dbkey<span class="token punctuation">;</span>\n            <span class="token keyword">return</span> multiFsql<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        public <span class="token keyword">static</span> IFreeSql Register<span class="token operator">&lt;</span>TDBKey<span class="token operator">&gt;</span><span class="token punctuation">(</span>this IFreeSql fsql<span class="token punctuation">,</span> TDBKey dbkey<span class="token punctuation">,</span> Func<span class="token operator">&lt;</span>IFreeSql<span class="token operator">&gt;</span> create<span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            var multiFsql <span class="token operator">=</span> fsql as MultiFreeSql<span class="token operator">&lt;</span>TDBKey<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>multiFsql <span class="token operator">==</span> null<span class="token punctuation">)</span> throw new <span class="token function">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;fsql 类型不是 MultiFreeSql&lt;TDBKey&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>multiFsql<span class="token punctuation">.</span>_ib<span class="token punctuation">.</span><span class="token function">TryRegister</span><span class="token punctuation">(</span>dbkey<span class="token punctuation">,</span> create<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>multiFsql<span class="token punctuation">.</span>_ib<span class="token punctuation">.</span><span class="token function">GetKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>\n                    multiFsql<span class="token punctuation">.</span>_dbkeyMaster <span class="token operator">=</span> dbkey<span class="token punctuation">;</span>\n            <span class="token keyword">return</span> multiFsql<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br></div></div><p>分库总结：</p><ul><li>跨库 事务不好处理，注意了；</li><li>跨库 查询不好处理，注意了；</li></ul>',29),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);
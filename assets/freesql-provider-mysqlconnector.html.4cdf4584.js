import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o as p,c as o,a as n,b as c,e as s,d as l}from"./app.29a1cf86.js";const i={},u=n("code",null,"FreeSql.Provider.MySqlConnector",-1),r=s("\u662F"),k=n("code",null,"FreeSql",-1),d=s("\u57FA\u4E8E\u793E\u533A\u63D0\u4F9B\u7684\u6700\u65B0\u7684"),m={href:"https://github.com/mysql-net/MySqlConnector",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"MySqlConnector",-1),y=s("\u9A71\u52A8\u7684\u5B9E\u73B0\uFF0C\u517C\u5BB9\u6027\u3001\u6027\u80FD\u90FD\u6BD4"),b=n("code",null,"FreeSql.Provider.MySql",-1),h=s("\u597D\uFF0C\u4E14\u652F\u6301\u591A\u79CD\u6570\u636E\u5E93\uFF0C\u5982\uFF1A"),q=n("code",null,"MySQL Server, MariaDB, Percona Server, Amazon Aurora, Azure Database for MySQL, Google Cloud SQL for MySQL, OceanBase",-1),_=l(`<p>\u5E76\u4E14\u652F\u6301BulkCopy\uFF0C<strong>\u63A8\u8350\u4F7F\u7528</strong></p><p>\u5982\u679C\u4F60\u4F7F\u7528 <code>FreeSql.Provider.MySql</code> \u53D1\u751F\u4E86\u4EE5\u4E0B\u9519\u8BEF\uFF0C\u8BF7\u66FF\u6362\u5230 FreeSql.Provider.MySqlConnector\uFF1A</p><ul><li>The given key &#39;0&#39; was not present in the dictionary.</li><li>The given key &#39;25653&#39; was not present in the dictionary.</li><li>The given key &#39;26995&#39; was not present in the dictionary.</li><li>The given key &#39;28261 was not present in the dictionary.</li><li>The given key &#39;65535&#39; was not present in the dictionary.</li><li>The type initializer for &#39;MySql.Data.MySqlClient.Replication.ReplicationManager&#39; threw an exception.</li><li>Parameter &#39;@xxx&#39; must be defined.</li></ul><h2 id="executemysqlbulkcopy" tabindex="-1"><a class="header-anchor" href="#executemysqlbulkcopy" aria-hidden="true">#</a> ExecuteMySqlBulkCopy</h2><ul><li>\u4E3B\u952E\u65E0\u503C</li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Department</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IsPrimary <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> IsIdentity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span>Department<span class="token punctuation">&gt;</span></span> departments <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Department<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Department</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span><span class="token string">&quot;\u90E8\u95E81&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Department</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span><span class="token string">&quot;\u90E8\u95E82&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Department</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span><span class="token string">&quot;\u90E8\u95E83&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
fsql<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>departments<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">InsertIdentity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u8FD9\u884C</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteMySqlBulkCopy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Id\u4E3B\u952E\u6709\u503C\u65F6</li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name">List<span class="token punctuation">&lt;</span>Department<span class="token punctuation">&gt;</span></span> departments <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Department<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Department</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> Name <span class="token operator">=</span><span class="token string">&quot;\u90E8\u95E81&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Department</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> Name <span class="token operator">=</span><span class="token string">&quot;\u90E8\u95E82&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Department</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Id<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> Name <span class="token operator">=</span><span class="token string">&quot;\u90E8\u95E83&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
fsql<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>departments<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteMySqlBulkCopy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function g(w,f){const a=e("ExternalLinkIcon");return p(),o("div",null,[n("p",null,[u,r,k,d,n("a",m,[v,c(a)]),y,b,h,q]),_])}var M=t(i,[["render",g],["__file","freesql-provider-mysqlconnector.html.vue"]]);export{M as default};

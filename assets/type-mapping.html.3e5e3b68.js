import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{d as n}from"./app.01d72c93.js";const s={},a=n(`<h1 id="\u7C7B\u578B\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u6620\u5C04" aria-hidden="true">#</a> \u7C7B\u578B\u6620\u5C04</h1><h2 id="\u81EA\u5B9A\u4E49\u7C7B\u578B\u6620\u5C04-maptype" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u7C7B\u578B\u6620\u5C04-maptype" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u7C7B\u578B\u6620\u5C04(MapType)</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">EnumTestMap</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>MapType <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">string</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">ToStringMapEnum</span> enum_to_string <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>MapType <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">string</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">ToStringMapEnum<span class="token punctuation">?</span></span> enumnullable_to_string <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>MapType <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">int</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">ToStringMapEnum</span> enum_to_int <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>MapType <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">ToStringMapEnum<span class="token punctuation">?</span></span> enumnullable_to_int <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>MapType <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">string</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">BigInteger</span> biginteger_to_string <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>MapType <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">string</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">BigInteger<span class="token punctuation">?</span></span> bigintegernullable_to_string <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">ToStringMapEnum</span> <span class="token punctuation">{</span> \u4E2D\u56FD\u4EBA<span class="token punctuation">,</span> abc<span class="token punctuation">,</span> \u9999\u6E2F <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u5E94\u8BE5\u4E0D\u9700\u8981\u89E3\u91CA\u4E86\u5427\uFF1F</p><p>BigInteger \u90FD\u53EF\u4EE5\u6620\u5C04\u4F7F\u7528\u4E86\uFF0C\u4F46\u8BF7\u6CE8\u610F\uFF1A\u4EC5\u4EC5\u662F CURD \u65B9\u4FBF\uFF0C Equals == \u5224\u65AD\u53EF\u4EE5\u4F7F\u7528\uFF0C\u65E0\u6CD5\u5B9E\u73B0 + - * / \u7B49\u64CD\u4F5C\uFF1B</p><p>v0.9.15 \u7248\u672C\u8FD8\u53EF\u4EE5\u5C06\u503C\u5BF9\u8C61\u6620\u5C04\u6210 typeof(string)\uFF0C\u5B89\u88C5\u6269\u5C55\u5305\uFF1A</p><blockquote><p>dotnet add package FreeSql.Extensions.JsonMap</p></blockquote><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token function">UseJsonMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5F00\u542F\u529F\u80FD</span>

<span class="token keyword">class</span> <span class="token class-name">TestConfig</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> clicks <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> title <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Table</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;sysconfig&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">S_SysConfig</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IsPrimary <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">JsonMap</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">TestConfig</span> Config <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u9ED8\u8BA4\u7C7B\u578B\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4\u7C7B\u578B\u6620\u5C04" aria-hidden="true">#</a> \u9ED8\u8BA4\u7C7B\u578B\u6620\u5C04</h2><table><thead><tr><th>csharp</th><th>MySql</th><th>SqlServer</th><th>PostgreSQL</th><th>Oracle</th><th>Sqlite</th><th>\u8FBE\u68A6</th></tr></thead><tbody><tr><td>bool | bool?</td><td>bit(1)</td><td>bit</td><td>bool</td><td>number(1)</td><td>boolean</td><td>number(1)</td></tr><tr><td>sbyte | sbyte?</td><td>tinyint(3)</td><td>smallint</td><td>int2</td><td>number(4)</td><td>smallint</td><td>number(4)</td></tr><tr><td>short | short?</td><td>smallint(6)</td><td>smallint</td><td>int2</td><td>number(6)</td><td>smallint</td><td>number(6)</td></tr><tr><td>int | int?</td><td>int(11)</td><td>int</td><td>int4</td><td>number(11)</td><td>integer</td><td>number(11)</td></tr><tr><td>long | long?</td><td>bigint(20)</td><td>bigint</td><td>int8</td><td>number(21)</td><td>integer</td><td>number(21)</td></tr><tr><td>byte | byte?</td><td>tinyint(3) unsigned</td><td>tinyint</td><td>int2</td><td>number(3)</td><td>int2</td><td>number(3)</td></tr><tr><td>ushort | ushort?</td><td>smallint(5) unsigned</td><td>int</td><td>int4</td><td>number(5)</td><td>unsigned</td><td>number(5)</td></tr><tr><td>uint | uint?</td><td>int(10) unsigned</td><td>bigint</td><td>int8</td><td>number(10)</td><td>decimal(10,0)</td><td>number(10)</td></tr><tr><td>ulong | ulong?</td><td>bigint(20) unsigned</td><td>decimal(20,0)</td><td>numeric(20,0)</td><td>number(20)</td><td>decimal(21,0)</td><td>number(20)</td></tr><tr><td>double | double?</td><td>double</td><td>float</td><td>float8</td><td>float(126)</td><td>double</td><td>double</td></tr><tr><td>float | float?</td><td>float</td><td>real</td><td>float4</td><td>float(63)</td><td>float</td><td>real</td></tr><tr><td>decimal | decimal?</td><td>decimal(10,2)</td><td>decimal(10,2)</td><td>numeric(10,2)</td><td>number(10,2)</td><td>decimal(10,2)</td><td>number(10,2)</td></tr><tr><td>Guid | Guid?</td><td>char(36)</td><td>uniqueidentifier</td><td>uuid</td><td>char(36 CHAR)</td><td>character(36)</td><td>char(36)</td></tr><tr><td>TimeSpan | TimeSpan?</td><td>time</td><td>time</td><td>time</td><td>interval day(2) to second(6)</td><td>bigint</td><td>-</td></tr><tr><td>DateTime | DateTime?</td><td>datetime</td><td>datetime</td><td>timestamp</td><td>timestamp(6)</td><td>datetime</td><td>timestamp(6)</td></tr><tr><td>DateTimeOffset | DateTimeOffset?</td><td>-</td><td>datetimeoffset</td><td>-</td><td>timestamp(6) with local time zone</td><td>-</td><td>timestamp(6)</td></tr><tr><td>Enum | Enum?</td><td>enum</td><td>int</td><td>int4</td><td>number(16)</td><td>mediumint</td><td>number(16)</td></tr><tr><td>FlagsEnum | FlagsEnum?</td><td>set</td><td>bigint</td><td>int8</td><td>number(32)</td><td>bigint</td><td>number(32)</td></tr><tr><td>byte[]</td><td>varbinary(255)</td><td>varbinary(255)</td><td>bytea</td><td>blob</td><td>blob</td><td>blob</td></tr><tr><td>string</td><td>varchar(255)</td><td>nvarchar(255)</td><td>varchar(255)</td><td>nvarchar2(255)</td><td>nvarchar(255)</td><td>nvarchar2(255)</td></tr></tbody></table><blockquote><p>\u4EE5\u4E0A\u7C7B\u578B\u548C\u957F\u5EA6\u662F\u9ED8\u8BA4\u503C\uFF0C\u53EF\u624B\u5DE5\u8BBE\u7F6E Column \u7279\u6027 DbType \u503C</p></blockquote><blockquote><p>string \u6307\u5B9A\u957F\u5EA6 [Column(DbType = &quot;varchar(max)&quot;)] \u6216\u8005 [MaxLength(-1)] \u6216\u8005 [Column(StringLength = -1)]\uFF0C\u5F53\u957F\u5EA6 -1 \u65F6\u4EA7\u751F\u7684\u6620\u5C04\u5982\u4E0B\uFF1A</p></blockquote><table><thead><tr><th>MySql</th><th>PostgreSQL</th><th>SqlServer</th><th>Oracle</th><th>Sqlite</th><th>Firebird</th><th>MsAccess</th><th>\u8FBE\u68A6</th><th>\u91D1\u4ED3</th><th>\u795E\u901A</th></tr></thead><tbody><tr><td>text</td><td>text</td><td>varchar(max)</td><td>nclob</td><td>text</td><td>blob sub_type 1</td><td>longtext</td><td>text</td><td>text</td><td>text</td></tr></tbody></table><blockquote><p>\u6CE8\u610F\uFF1AOracle nclob \u9700\u8981 v1.3.2+ \u7248\u672C\u624D\u652F\u6301\uFF0C\u5426\u5219\u5C06\u6620\u5C04 nvarchar2(4000)</p></blockquote><blockquote><p>\u6CE8\u610F\uFF1AMySql [MaxLength(-2)] \u6216\u8005 [Column(StringLength = -2)] \u6620\u5C04\u7C7B\u578B longtext\uFF0C\u5176\u4ED6\u6570\u636E\u5E93\u7684\u6620\u5C04\u89C4\u5219\u4E0E -1 \u76F8\u540C</p></blockquote><blockquote><p>decimal \u6307\u5B9A\u957F\u5EA6 [Column(Precision = 10, Scale = 2)]</p></blockquote><h2 id="mysql-\u7279\u522B\u7C7B\u578B\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#mysql-\u7279\u522B\u7C7B\u578B\u6620\u5C04" aria-hidden="true">#</a> MySql \u7279\u522B\u7C7B\u578B\u6620\u5C04</h2><table><thead><tr><th>csharp</th><th>MySql</th></tr></thead><tbody><tr><td>MygisPoint</td><td>point</td></tr><tr><td>MygisLineString</td><td>linestring</td></tr><tr><td>MygisPolygon</td><td>polygon</td></tr><tr><td>MygisMultiPoint</td><td>multipoint</td></tr><tr><td>MygisMultiLineString</td><td>multilinestring</td></tr><tr><td>MygisMultiPolygon</td><td>multipolygon</td></tr></tbody></table><h2 id="mysql\u6CE8\u610F\u4E8B\u9879" tabindex="-1"><a class="header-anchor" href="#mysql\u6CE8\u610F\u4E8B\u9879" aria-hidden="true">#</a> Mysql\u6CE8\u610F\u4E8B\u9879</h2><p>\u5982\u679C<code>int\u3001byte</code>\u7C7B\u578B\uFF0C\u6307\u5B9A\u4E86 <code>DbType=&quot;tinyint(1)&quot;</code>,\u8BF7\u6CE8\u610F\uFF0C<code>tinyint(1)</code>\u5728ado.net\u4E2D\u9ED8\u8BA4\u5C06\u6B64\u503C\u6620\u5C04\u4E3A<code>bool</code>\u7C7B\u578B\uFF0C\u53EF\u5728\u94FE\u63A5\u4E32\u4E2D\u6307\u5B9A<code>TreatTinyAsBoolean=false</code>,\u4F7F\u6620\u5C04 <code>tinyint(1) </code>\u4E3A <code>SByte</code> \u800C\u975E <code>bool</code>\u3002</p><h2 id="postgresql-\u7279\u522B\u7C7B\u578B\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#postgresql-\u7279\u522B\u7C7B\u578B\u6620\u5C04" aria-hidden="true">#</a> PostgreSQL \u7279\u522B\u7C7B\u578B\u6620\u5C04</h2><table><thead><tr><th>csharp</th><th>PostgreSQL</th></tr></thead><tbody><tr><td>BitArray</td><td>varbit(64)</td></tr><tr><td>NpgsqlPoint | NpgsqlPoint?</td><td>point</td></tr><tr><td>NpgsqlLine | NpgsqlLine?</td><td>line</td></tr><tr><td>NpgsqlLSeg | NpgsqlLSeg?</td><td>lseg</td></tr><tr><td>NpgsqlBox | NpgsqlBox?</td><td>box</td></tr><tr><td>NpgsqlPath | NpgsqlPath?</td><td>path</td></tr><tr><td>NpgsqlPolygon | NpgsqlPolygon?</td><td>polygon</td></tr><tr><td>NpgsqlCircle | NpgsqlCircle?</td><td>circle</td></tr><tr><td>(IPAddress Address, int Subnet) | (IPAddress Address, int Subnet)?</td><td>cidr</td></tr><tr><td>IPAddress</td><td>inet</td></tr><tr><td>PhysicalAddress</td><td>macaddr</td></tr><tr><td>NpgsqlRange&lt;int&gt; | NpgsqlRange&lt;int&gt;?</td><td>int4range</td></tr><tr><td>NpgsqlRange&lt;long&gt; | NpgsqlRange&lt;long&gt;?</td><td>int8range</td></tr><tr><td>NpgsqlRange&lt;decimal&gt; | NpgsqlRange&lt;decimal&gt;?</td><td>numrange</td></tr><tr><td>NpgsqlRange&lt;DateTime&gt; | NpgsqlRange&lt;DateTime&gt;?</td><td>tsrange</td></tr><tr><td>PostgisPoint</td><td>geometry</td></tr><tr><td>PostgisLineString</td><td>geometry</td></tr><tr><td>PostgisPolygon</td><td>geometry</td></tr><tr><td>PostgisMultiPoint</td><td>geometry</td></tr><tr><td>PostgisMultiLineString</td><td>geometry</td></tr><tr><td>PostgisMultiPolygon</td><td>geometry</td></tr><tr><td>PostgisGeometry</td><td>geometry</td></tr><tr><td>PostgisGeometryCollection</td><td>geometry</td></tr><tr><td>Dictionary&lt;string, string&gt;</td><td>hstore</td></tr><tr><td>JToken</td><td>jsonb</td></tr><tr><td>JObject</td><td>jsonb</td></tr><tr><td>JArray</td><td>jsonb</td></tr><tr><td>\u6570\u7EC4</td><td>\u4EE5\u4E0A\u6240\u6709\u7C7B\u578B\u90FD\u652F\u6301\uFF0C\u5305\u62EC\u9ED8\u8BA4\u7C7B\u578B</td></tr></tbody></table><h2 id="\u4F18\u5148\u7EA7" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5148\u7EA7" aria-hidden="true">#</a> \u4F18\u5148\u7EA7</h2><p>\u4ECE\u6570\u636E\u5E93\u5BFC\u5165\u7279\u6027 &gt; \u5B9E\u4F53\u7279\u6027 &gt; FluentApi &gt; Aop</p>`,24);function e(p,o){return a}var c=t(s,[["render",e],["__file","type-mapping.html.vue"]]);export{c as default};

import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as t}from"./app.459dd5d3.js";const p={},e=t(`<h1 id="\u5220\u9664" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664" aria-hidden="true">#</a> \u5220\u9664</h1><p>\u5220\u9664\u662F\u4E00\u4E2A\u975E\u5E38\u5371\u9669\u7684\u64CD\u4F5C\uFF0CFreeSql \u5BF9\u5220\u9664\u652F\u6301\u5E76\u4E0D\u5F3A\u5927\uFF0C\u9ED8\u8BA4\u4EC5\u652F\u6301\u5355\u8868\u3001\u4E14\u6709\u6761\u4EF6\u7684\u5220\u9664\u65B9\u6CD5\u3002</p><p>\u82E5 <code>Where</code> \u6761\u4EF6\u4E3A\u7A7A\u7684\u65F6\u5019\u6267\u884C\uFF0C\u4EC5\u8FD4\u56DE <code>0</code> \u6216\u9ED8\u8BA4\u503C\uFF0C\u4E0D\u6267\u884C\u771F\u6B63\u7684 SQL \u5220\u9664\u64CD\u4F5C\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token class-name">IFreeSql</span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSql<span class="token punctuation">.</span>FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">UseConnectionString</span><span class="token punctuation">(</span>FreeSql<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>MySql<span class="token punctuation">,</span> connectionString<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">UseAutoSyncStructure</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">//\u81EA\u52A8\u540C\u6B65\u5B9E\u4F53\u7ED3\u6784\u5230\u6570\u636E\u5E93</span>
    <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8BF7\u52A1\u5FC5\u5B9A\u4E49\u6210 Singleton \u5355\u4F8B\u6A21\u5F0F</span>

<span class="token keyword">class</span> <span class="token class-name">Topic</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IsIdentity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> IsPrimary <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Clicks <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Title <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> CreateTime <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u52A8\u6001\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u6761\u4EF6" aria-hidden="true">#</a> \u52A8\u6001\u6761\u4EF6</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> dywhere<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>dywhere</code> \u652F\u6301\uFF1A</p><ul><li>\u4E3B\u952E\u503C</li><li><code>new[] { \u4E3B\u952E\u503C1, \u4E3B\u952E\u503C2 }</code></li><li>Topic \u5BF9\u8C61</li><li><code>new[] { Topic\u5BF9\u8C611, Topic\u5BF9\u8C612 }</code></li><li><code>new { id = 1 }</code></li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> t1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//DELETE FROM \`Topic\` WHERE (\`Id\` = 1 OR \`Id\` = 2)</span>

<span class="token class-name"><span class="token keyword">var</span></span> t2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Topic</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> Title <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//DELETE FROM \`Topic\` WHERE (\`Id\` = 1)</span>

<span class="token class-name"><span class="token keyword">var</span></span> t3 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Topic</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> Title <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Topic</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> Title <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//DELETE FROM \`Topic\` WHERE (\`Id\` in (1, 2))</span>

<span class="token class-name"><span class="token keyword">var</span></span> t4 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token punctuation">{</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//DELETE FROM \`Topic\` WHERE (\`Id\` = 1)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5220\u9664\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u6761\u4EF6" aria-hidden="true">#</a> \u5220\u9664\u6761\u4EF6</h2><blockquote><p>\u51FA\u4E8E\u5B89\u5168\u8003\u8651\uFF0C\u6CA1\u6709\u6761\u4EF6\u4E0D\u6267\u884C\u5220\u9664\u52A8\u4F5C\uFF0C\u907F\u514D\u8BEF\u5220\u9664\u5168\u8868\u6570\u636E\u3002\u5220\u9664\u5168\u8868\u6570\u636E\uFF1A<code>fsql.Delete&lt;T&gt;().Where(&quot;1=1&quot;).ExecuteAffrows()</code></p></blockquote><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> t5 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//DELETE FROM \`Topic\` WHERE (\`Id\` = 1)</span>

<span class="token class-name"><span class="token keyword">var</span></span> t6 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;id = @id&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//DELETE FROM \`Topic\` WHERE (id = @id)</span>

<span class="token class-name"><span class="token keyword">var</span></span> item <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Topic</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> Title <span class="token operator">=</span> <span class="token string">&quot;newtitle&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> t7 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//DELETE FROM \`Topic\` WHERE (\`Id\` = 1)</span>

<span class="token class-name"><span class="token keyword">var</span></span> items <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span> items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Topic</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> Title <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;newtitle</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">a</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> Clicks <span class="token operator">=</span> a <span class="token operator">*</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> t8 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//DELETE FROM \`Topic\` WHERE (\`Id\` IN (1,2,3,4,5,6,7,8,9,10))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B57\u5178\u5220\u9664" tabindex="-1"><a class="header-anchor" href="#\u5B57\u5178\u5220\u9664" aria-hidden="true">#</a> \u5B57\u5178\u5220\u9664</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> dic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
dic<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
dic<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xxxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fsql<span class="token punctuation">.</span><span class="token function">DeleteDict</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span><span class="token string">&quot;table1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iselect-todelete-\u9AD8\u7EA7\u5220\u9664" tabindex="-1"><a class="header-anchor" href="#iselect-todelete-\u9AD8\u7EA7\u5220\u9664" aria-hidden="true">#</a> ISelect.ToDelete \u9AD8\u7EA7\u5220\u9664</h2><p><code>IDelete</code> \u9ED8\u8BA4\u4E0D\u652F\u6301\u5BFC\u822A\u5BF9\u8C61\uFF0C\u591A\u8868\u5173\u8054\u7B49\u3002<code>ISelect.ToDelete</code> \u53EF\u5C06\u67E5\u8BE2\u8F6C\u4E3A <code>IDelete</code>\uFF0C\u4EE5\u4FBF\u4F7F\u7528\u5BFC\u822A\u5BF9\u8C61\u5220\u9664\u6570\u636E\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Options<span class="token punctuation">.</span>xxx <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF1A\u6B64\u65B9\u6CD5\u4E0D\u662F\u5C06\u6570\u636E\u67E5\u8BE2\u5230\u5185\u5B58\u5FAA\u73AF\u5220\u9664\uFF0C\u4E0A\u9762\u7684\u4EE3\u7801\u4EA7\u751F\u5982\u4E0B SQL \u6267\u884C\uFF1A</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>T1<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> a<span class="token punctuation">.</span>id <span class="token keyword">from</span> T1 a <span class="token keyword">left</span> <span class="token keyword">join</span> Options b <span class="token keyword">on</span> b<span class="token punctuation">.</span>t1id <span class="token operator">=</span> a<span class="token punctuation">.</span>id <span class="token keyword">where</span> b<span class="token punctuation">.</span>xxx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u590D\u6742\u5220\u9664\u4F7F\u7528\u6B64\u65B9\u6CD5\u7684\u597D\u5904\uFF1A</p><ul><li>\u5220\u9664\u524D\u53EF\u9884\u89C8\u6D4B\u8BD5\u6570\u636E\uFF0C\u9632\u6B62\u9519\u8BEF\u5220\u9664\u64CD\u4F5C\uFF1B</li><li>\u652F\u6301\u590D\u6742\u7684\u5220\u9664\u64CD\u4F5C\uFF0C\u4F8B\u5982\uFF1A<code>ISelect</code> \u4E0A\u4F7F\u7528 <code>Limit(10)</code> \u5220\u9664\u9644\u5408\u6761\u4EF6\u7684\u524D 10 \u6761\u8BB0\u5F55\uFF1B</li></ul><h2 id="ibaserepository-\u7EA7\u8054\u5220\u9664" tabindex="-1"><a class="header-anchor" href="#ibaserepository-\u7EA7\u8054\u5220\u9664" aria-hidden="true">#</a> IBaseRepository \u7EA7\u8054\u5220\u9664</h2><p>1\u3001\u7B2C\u4E00\u79CD\uFF1A\u57FA\u4E8E\u3010\u5BF9\u8C61\u3011\u7EA7\u8054\u5220\u9664</p><blockquote><p>\u6BD4\u5982 Include/IncludeMany \u67E5\u8BE2\u7684\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u4F7F\u7528\u6B64\u65B9\u6CD5\u7EA7\u8054\u5220\u9664\u5B83\u4EEC\u3002</p></blockquote><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> repo <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRepository</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Group<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
repo<span class="token punctuation">.</span>DbContextOptions<span class="token punctuation">.</span>EnableCascadeSave <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//\u5173\u952E\u8BBE\u7F6E</span>
repo<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserGroup</span>
<span class="token punctuation">{</span>
    GroupName <span class="token operator">=</span> <span class="token string">&quot;group01&quot;</span><span class="token punctuation">,</span>
    Users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>User<span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">User</span> <span class="token punctuation">{</span> Username <span class="token operator">=</span> <span class="token string">&quot;admin01&quot;</span><span class="token punctuation">,</span> Password <span class="token operator">=</span> <span class="token string">&quot;pwd01&quot;</span><span class="token punctuation">,</span> UserExt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserExt</span> <span class="token punctuation">{</span> Remark <span class="token operator">=</span> <span class="token string">&quot;\u7528\u6237\u5907\u6CE801&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">User</span> <span class="token punctuation">{</span> Username <span class="token operator">=</span> <span class="token string">&quot;admin02&quot;</span><span class="token punctuation">,</span> Password <span class="token operator">=</span> <span class="token string">&quot;pwd02&quot;</span><span class="token punctuation">,</span> UserExt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserExt</span> <span class="token punctuation">{</span> Remark <span class="token operator">=</span> <span class="token string">&quot;\u7528\u6237\u5907\u6CE802&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">User</span> <span class="token punctuation">{</span> Username <span class="token operator">=</span> <span class="token string">&quot;admin03&quot;</span><span class="token punctuation">,</span> Password <span class="token operator">=</span> <span class="token string">&quot;pwd03&quot;</span><span class="token punctuation">,</span> UserExt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserExt</span> <span class="token punctuation">{</span> Remark <span class="token operator">=</span> <span class="token string">&quot;\u7528\u6237\u5907\u6CE803&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u7EA7\u8054\u6DFB\u52A0\u6D4B\u8BD5\u6570\u636E</span>
<span class="token comment">//INSERT INTO &quot;usergroup&quot;(&quot;groupname&quot;) VALUES(&#39;group01&#39;) RETURNING &quot;id&quot;</span>
<span class="token comment">//INSERT INTO &quot;user&quot;(&quot;username&quot;, &quot;password&quot;, &quot;groupid&quot;) VALUES(&#39;admin01&#39;, &#39;pwd01&#39;, 1), (&#39;admin02&#39;, &#39;pwd02&#39;, 1), (&#39;admin03&#39;, &#39;pwd03&#39;, 1) RETURNING &quot;id&quot; as &quot;Id&quot;, &quot;username&quot; as &quot;Username&quot;, &quot;password&quot; as &quot;Password&quot;, &quot;groupid&quot; as &quot;GroupId&quot;</span>
<span class="token comment">//INSERT INTO &quot;userext&quot;(&quot;userid&quot;, &quot;remark&quot;) VALUES(3, &#39;\u7528\u6237\u5907\u6CE801&#39;), (4, &#39;\u7528\u6237\u5907\u6CE802&#39;), (5, &#39;\u7528\u6237\u5907\u6CE803&#39;)</span>

<span class="token class-name"><span class="token keyword">var</span></span> groups <span class="token operator">=</span> repo<span class="token punctuation">.</span>Select
    <span class="token punctuation">.</span><span class="token function">IncludeMany</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Users<span class="token punctuation">,</span>
        then <span class="token operator">=&gt;</span> then<span class="token punctuation">.</span><span class="token function">Include</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>UserExt<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
repo<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span>groups<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u7EA7\u8054\u5220\u9664\uFF0C\u9012\u5F52\u5411\u4E0B\u904D\u5386 group OneToOne/OneToMany/ManyToMany \u5BFC\u822A\u5C5E\u6027</span>
<span class="token comment">//DELETE FROM &quot;userext&quot; WHERE (&quot;userid&quot; IN (3,4,5))</span>
<span class="token comment">//DELETE FROM &quot;user&quot; WHERE (&quot;id&quot; IN (3,4,5))</span>
<span class="token comment">//DELETE FROM &quot;usergroup&quot; WHERE (&quot;id&quot; = 1)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2\u3001\u7B2C\u4E8C\u79CD\uFF1A\u57FA\u4E8E\u3010\u6570\u636E\u5E93\u3011\u7EA7\u8054\u5220\u9664</p><blockquote><p>\u6839\u636E\u8BBE\u7F6E\u7684\u5BFC\u822A\u5C5E\u6027\uFF0C\u9012\u5F52\u5220\u9664 OneToOne/OneToMany/ManyToMany \u5BF9\u5E94\u6570\u636E\uFF0C\u5E76\u8FD4\u56DE\u5DF2\u5220\u9664\u7684\u6570\u636E\u3002\u6B64\u529F\u80FD\u4E0D\u4F9D\u8D56\u6570\u636E\u5E93\u5916\u952E</p></blockquote><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> repo <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRepository</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Group<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> ret <span class="token operator">=</span> repo<span class="token punctuation">.</span><span class="token function">DeleteCascadeByDatabase</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT a.&quot;id&quot;, a.&quot;username&quot;, a.&quot;password&quot;, a.&quot;groupid&quot; FROM &quot;user&quot; a WHERE (a.&quot;groupid&quot; = 1)</span>
<span class="token comment">//SELECT a.&quot;userid&quot;, a.&quot;remark&quot; FROM &quot;userext&quot; a WHERE (a.&quot;userid&quot; IN (3,4,5))</span>
<span class="token comment">//DELETE FROM &quot;userext&quot; WHERE (&quot;userid&quot; IN (3,4,5))</span>
<span class="token comment">//DELETE FROM &quot;user&quot; WHERE (&quot;id&quot; IN (3,4,5))</span>
<span class="token comment">//DELETE FROM &quot;usergroup&quot; WHERE (&quot;id&quot; = 1)</span>

<span class="token comment">//ret   Count = 7	System.Collections.Generic.List&lt;object&gt;</span>
<span class="token comment">//  [0]	{UserExt}	object {UserExt}</span>
<span class="token comment">//  [1]	{UserExt}	object {UserExt}</span>
<span class="token comment">//  [2]	{UserExt}	object {UserExt}</span>
<span class="token comment">//  [3]	{User}	    object {User}</span>
<span class="token comment">//  [4]	{User}	    object {User}</span>
<span class="token comment">//  [5]	{User}  	object {User}</span>
<span class="token comment">//  [6]	{UserGroup}	object {UserGroup}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Group</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IsIdentity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> GroupName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Navigate</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>User<span class="token punctuation">.</span>GroupId<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>User<span class="token punctuation">&gt;</span></span> Users <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IsIdentity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Username <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Password <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> GroupId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Navigate</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">UserExt</span> UserExt <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserExt</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IsPrimary <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> UserId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Remark <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Navigate</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>UserId<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">User</span> User <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><table><thead><tr><th>\u65B9\u6CD5</th><th>\u8FD4\u56DE\u503C</th><th>\u53C2\u6570</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>Where</td><td>&lt;this&gt;</td><td>Lambda</td><td>\u8868\u8FBE\u5F0F\u6761\u4EF6\uFF0C\u4EC5\u652F\u6301\u5B9E\u4F53\u57FA\u7840\u6210\u5458\uFF08\u4E0D\u5305\u542B\u5BFC\u822A\u5BF9\u8C61\uFF09</td></tr><tr><td>Where</td><td>&lt;this&gt;</td><td>string, parms</td><td>\u539F\u751F sql \u8BED\u6CD5\u6761\u4EF6\uFF0CWhere(&quot;id = @id&quot;, new { id = 1 })</td></tr><tr><td>Where</td><td>&lt;this&gt;</td><td>T1 | IEnumerable&lt;T1&gt;</td><td>\u4F20\u5165\u5B9E\u4F53\u6216\u96C6\u5408\uFF0C\u5C06\u5176\u4E3B\u952E\u4F5C\u4E3A\u6761\u4EF6</td></tr><tr><td>CommandTimeout</td><td>&lt;this&gt;</td><td>int</td><td>\u547D\u4EE4\u8D85\u65F6\u8BBE\u7F6E(\u79D2)</td></tr><tr><td>WithTransaction</td><td>&lt;this&gt;</td><td>DbTransaction</td><td>\u8BBE\u7F6E\u4E8B\u52A1\u5BF9\u8C61</td></tr><tr><td>WithConnection</td><td>&lt;this&gt;</td><td>DbConnection</td><td>\u8BBE\u7F6E\u8FDE\u63A5\u5BF9\u8C61</td></tr><tr><td>ToSql</td><td>string</td><td></td><td>\u8FD4\u56DE\u5373\u5C06\u6267\u884C\u7684 SQL \u8BED\u53E5</td></tr><tr><td>ExecuteAffrows</td><td>long</td><td></td><td>\u6267\u884C SQL \u8BED\u53E5\uFF0C\u8FD4\u56DE\u5F71\u54CD\u7684\u884C\u6570</td></tr><tr><td>ExecuteDeleted</td><td>List&lt;T1&gt;</td><td></td><td>\u6267\u884C SQL \u8BED\u53E5\uFF0C\u8FD4\u56DE\u88AB\u5220\u9664\u7684\u8BB0\u5F55</td></tr></tbody></table>`,30),o=[e];function c(l,u){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","delete.html.vue"]]);export{r as default};
